write.csv(suptab, "~/Desktop/Supplemental_Table_altitudes")
suptab <- cbind.data.frame(lrdta$FullID,lrdta$Region,lrdta$Altitude)
write.csv(suptab, "~/Desktop/Supplemental_Table_altitudes")
lrdta <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/PhenotypeData/Final_Phenotypes/Landrace_data.csv")
lrdta$X <- NULL
data <- subset(lrdta, lrdta$Region!="SWUS")
geno <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SNP_data/Landrace_noSWUS_matrix.csv",header=TRUE,row.names=1)
A <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/PhenotypeData/Final_Phenotypes/Landrace_kinshipmatrix.csv",row.names="X")
le1 <- as.data.frame(colnames(geno))
names(le1)[1] <- "names"
le2 <- as.data.frame(data$Row.names)
#again, this is where i realize i had to rename 626.2 to 626.1
phenoorder <- merge(le1, data, by.x="names", by.y="Row.names",sort=FALSE)
mexphen1 <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Master_mexnucleo_pruned2.csv") #phenotype data in matching order
ggplot(mexphen1, aes(Altitude, X1c),) + geom_point()+ ylab("2C Genome Size (pg)") +guides(color=FALSE) +xlab("Altitude (m)")
mexphen <- subset(mexphen1, mexphen1$Altitude>2000)
p4 <- ggplot(mexphen, aes(Altitude, X1c),) + geom_point()+ ylab("2C Genome Size (pg)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE) +xlab("Altitude (m)")#ggtitle("Genome Size")
p5 <- ggplot(mexphen, aes(Altitude, X180knobbp),) + geom_point()+ ylab("180bp Knob (bp)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE) +xlab("Altitude (m)")#ggtitle("Genome Size")
p6 <- ggplot(mexphen, aes(Altitude, TotalTebp),) + geom_point()+ ylab("Total TE content (bp)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE) +xlab("Altitude (m)")#ggtitle("Genome Size")
library(gridExtra)
phenoorder$Group <- as.factor(phenoorder$Group)
phenoorder$X2c <- 2 * phenoorder$X1C_GS
p1<-ggplot(phenoorder, aes(Altitude, X2c,color=Group),) + geom_point()+ ylab("2C Genome Size (pg)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE) +xlab("Altitude (m)")#ggtitle("Genome Size")
p2<-ggplot(phenoorder, aes(Altitude, X180knobbp,color=Group),) + geom_point()+ ylab("180bp Knob (bp)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Genome Size")
p3<-ggplot(phenoorder, aes(Altitude, TotallTebp,color=Group),) + geom_point()+ ylab("Total TE content (bp)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Landrace Genome Size")
p1<-ggplot(phenoorder, aes(Altitude, X2c,color=Group),) + geom_point()+ ylab("2C Genome Size (pg)") +geom_smooth(method="lm",se = FALSE)+guides(color=FALSE) +xlab("Altitude (m)")#ggtitle("Genome Size")
p2<-ggplot(phenoorder, aes(Altitude, X180knobbp,color=Group),) + geom_point()+ ylab("180bp Knob (bp)") +geom_smooth(method="lm",linetype="dashed",se = FALSE)+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Genome Size")
p3<-ggplot(phenoorder, aes(Altitude, TotallTebp,color=Group),) + geom_point()+ ylab("Total TE content (bp)") +geom_smooth(method="lm",linetype="dashed")+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Landrace Genome Size")
grid.arrange(p1,p2,p3,p4,p5,p6,ncol=3)
p1<-ggplot(phenoorder, aes(Altitude, X2c,color=Group),) + geom_point()+ ylab("2C Genome Size (pg)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE) +xlab("testAltitude (m)")#ggtitle("Genome Size")
p2<-ggplot(phenoorder, aes(Altitude, X180knobbp,color=Group),) + geom_point()+ ylab("180bp Knob (bp)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Genome Size")
p3<-ggplot(phenoorder, aes(Altitude, TotallTebp,color=Group),) + geom_point()+ ylab("Total TE content (bp)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Landrace Genome Size")
p1<-ggplot(phenoorder, aes(Altitude, X2c,color=Group),) + geom_point()+ ylab("2C Genome Size (pg)") +geom_smooth(method="lm",se = FALSE)+guides(color=FALSE) +xlab("Altitude (m)")#ggtitle("Genome Size")
p2<-ggplot(phenoorder, aes(Altitude, X180knobbp,color=Group),) + geom_point()+ ylab("180bp Knob (bp)") +geom_smooth(method="lm",linetype="dashed",se = FALSE)+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Genome Size")
p3<-ggplot(phenoorder, aes(Altitude, TotallTebp,color=Group),) + geom_point()+ ylab("Total TE content (bp)") +geom_smooth(method="lm",linetype="dashed")+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Landrace Genome Size")
grid.arrange(p1,p2,p3,p4,p5,p6,ncol=3)
p1<-ggplot(phenoorder, aes(Altitude, X2c,color=Group),) + geom_point()+ ylab("2C Genome Size (pg)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE) +xlab("testAltitude (m)")#ggtitle("Genome Size")
p1
lrdta <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/PhenotypeData/Final_Phenotypes/Landrace_data.csv")
lrdta$X <- NULL
data <- subset(lrdta, lrdta$Region!="SWUS")
le1 <- as.data.frame(colnames(geno))
lrdta <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/PhenotypeData/Final_Phenotypes/Landrace_data.csv")
lrdta$X <- NULL
data <- subset(lrdta, lrdta$Region!="SWUS")
#KINSHIP MATRIX, this is saved in Landrace_kinshipmatrix.csv
geno <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SNP_data/Landrace_noSWUS_matrix.csv",header=TRUE,row.names=1)
#dt <-t(geno)
#A <- A.mat(dt)
#write.csv(A,"~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/PhenotypeData/Final_Phenotypes/Landrace_kinshipmatrix.csv")
#to make sure order is the same
A <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/PhenotypeData/Final_Phenotypes/Landrace_kinshipmatrix.csv",row.names="X")
le1 <- as.data.frame(colnames(geno))
names(le1)[1] <- "names"
le2 <- as.data.frame(data$Row.names)
#again, this is where i realize i had to rename 626.2 to 626.1
phenoorder <- merge(le1, data, by.x="names", by.y="Row.names",sort=FALSE)
mexphen1 <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Master_mexnucleo_pruned2.csv") #phenotype data in matching order
ggplot(mexphen1, aes(Altitude, X1c),) + geom_point()+ ylab("2C Genome Size (pg)") +guides(color=FALSE) +xlab("Altitude (m)")
mexphen <- subset(mexphen1, mexphen1$Altitude>2000)
library(gridExtra)
phenoorder$Group <- as.factor(phenoorder$Group)
phenoorder$X2c <- 2 * phenoorder$X1C_GS
p1<-ggplot(phenoorder, aes(Altitude, X2c,color=Group),) + geom_point()+ ylab("2C Genome Size (pg)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE) +xlab("Altitude (m)")#ggtitle("Genome Size")
p1
p1<-ggplot(phenoorder, aes(Altitude, X2c,color=Group),) + geom_point()+ ylab("2C Genome Size (pg)") +geom_smooth(method="lm",se = FALSE)+guides(color=FALSE) +xlab("Altitude (m)")#ggtitle("Genome Size")
p1
p2<-ggplot(phenoorder, aes(Altitude, X180knobbp,color=Group),) + geom_point()+ ylab("180bp Knob (bp)") +geom_smooth(method="lm",linetype="dashed",se = FALSE)+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Genome Size")
p2
p2
p1<-ggplot(phenoorder, aes(Altitude, X2c,color=Group),) + geom_point()+ ylab("2C Genome Size (pg)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Genome Size")
p1
p3<-ggplot(phenoorder, aes(Altitude, TotallTebp,color=Group),) + geom_point()+ ylab("Total TE content (bp)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Landrace Genome Size")
p3
p1<-ggplot(phenoorder, aes(Altitude, X2c,color=Group),) + geom_point()+ ylab("2C Genome Size (pg)") +geom_smooth(method="lm",se = FALSE)+guides(color=FALSE) +xlab("Altitude (m)")#ggtitle("Genome Size")
p2<-ggplot(phenoorder, aes(Altitude, X180knobbp,color=Group),) + geom_point()+ ylab("180bp Knob (bp)") +geom_smooth(method="lm",linetype="dashed",se = FALSE)+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Genome Size")
p2
p3<-ggplot(phenoorder, aes(Altitude, TotallTebp,color=Group),) + geom_point()+ ylab("Total TE content (bp)") +geom_smooth(method="lm",linetype="dashed",se = FALSE)+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Genome Size")
p3
p1<-ggplot(phenoorder, aes(Altitude, X2c,color=Group),) + geom_point()+ ylab("2C Genome Size (pg)") +geom_smooth(method="lm",linetype="dashed",se = FALSE)+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Genome Size")
p2<-ggplot(phenoorder, aes(Altitude, X180knobbp,color=Group),) + geom_point()+ ylab("180bp Knob (bp)") +geom_smooth(method="lm",linetype="dashed",se = FALSE)+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Genome Size")
p3<-ggplot(phenoorder, aes(Altitude, TotallTebp,color=Group),) + geom_point()+ ylab("Total TE content (bp)") +geom_smooth(method="lm",linetype="dashed",se = FALSE)+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Genome Size")
grid.arrange(p1,p2,p3,p4,p5,p6,ncol=3)
mexphen1 <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Master_mexnucleo_pruned2.csv") #phenotype data in matching order
ggplot(mexphen1, aes(Altitude, X1c),) + geom_point()+ ylab("2C Genome Size (pg)") +guides(color=FALSE) +xlab("Altitude (m)")
mexphen <- subset(mexphen1, mexphen1$Altitude>2000)
p4 <- ggplot(mexphen, aes(Altitude, X1c),) + geom_point()+ ylab("2C Genome Size (pg)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE) +xlab("Altitude (m)")#ggtitle("Genome Size")
p5 <- ggplot(mexphen, aes(Altitude, X180knobbp),) + geom_point()+ ylab("180bp Knob (bp)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE) +xlab("Altitude (m)")#ggtitle("Genome Size")
p6 <- ggplot(mexphen, aes(Altitude, TotalTebp),) + geom_point()+ ylab("Total TE content (bp)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE) +xlab("Altitude (m)")#ggtitle("Genome Size")
grid.arrange(p1,p2,p3,p4,p5,p6,ncol=3)
p4 <- ggplot(mexphen, aes(Altitude, X1c),) + geom_point()+ ylab("2C Genome Size (pg)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE) +xlab("Altitude (m)")+guides(color=FALSE)#ggtitle("Genome Size")
p5 <- ggplot(mexphen, aes(Altitude, X180knobbp),) + geom_point()+ ylab("180bp Knob (bp)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE) +xlab("Altitude (m)")+guides(color=FALSE)#ggtitle("Genome Size")
p6 <- ggplot(mexphen, aes(Altitude, TotalTebp),) + geom_point()+ ylab("Total TE content (bp)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE) +xlab("Altitude (m)")+guides(color=FALSE)#ggtitle("Genome Size")
grid.arrange(p1,p2,p3,p4,p5,p6,ncol=3)
p1<-ggplot(phenoorder, aes(Altitude, X2c,color=Group),) + geom_point()+ ylab("2C Genome Size (pg)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Genome Size")
p1
p1<-ggplot(phenoorder, aes(Altitude, X2c,color=Group),) + geom_point()+ ggtitle("2C Genome Size (pg)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE) +xlab("Altitude (m)")+ ylab("")#ggtitle("Genome Size")
p2<-ggplot(phenoorder, aes(Altitude, X180knobbp,color=Group),) + geom_point()+ ggtitle("180bp Knob (bp)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed")+guides(color=FALSE)+xlab("Altitude (m)")+ ylab("")#+ ggtitle("Genome Size")
p2
p1<-ggplot(phenoorder, aes(Altitude, X2c,color=Group),) + geom_point()+ ylab("2C Genome Size (pg)") +geom_smooth(method="lm",linetype="dashed",se = FALSE)+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Genome Size")
p1
p1<-ggplot(phenoorder, aes(Altitude, X2c,color=Group),) + geom_point()+ ylab("2C Genome Size (pg)") +geom_smooth(method="lm",linetype="dashed",se = FALSE)+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Genome Size")
p2<-ggplot(phenoorder, aes(Altitude, X180knobbp,color=Group),) + geom_point()+ ylab("180bp Knob (bp)") +geom_smooth(method="lm",linetype="dashed",se = FALSE)+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Genome Size")
p3<-ggplot(phenoorder, aes(Altitude, TotallTebp,color=Group),) + geom_point()+ ylab("Total TE content (bp)") +geom_smooth(method="lm",linetype="dashed",se = FALSE)+guides(color=FALSE)+xlab("Altitude (m)")#+ ggtitle("Genome Size")
p4 <- ggplot(mexphen, aes(Altitude, X1c),) + geom_point()+ ylab("2C Genome Size (pg)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed",se = FALSE)+guides(color=FALSE) +xlab("Altitude (m)")#ggtitle("Genome Size")
p5 <- ggplot(mexphen, aes(Altitude, X180knobbp),) + geom_point()+ ylab("180bp Knob (bp)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed",se = FALSE)+guides(color=FALSE) +xlab("Altitude (m)")#ggtitle("Genome Size")
p6 <- ggplot(mexphen, aes(Altitude, TotalTebp),) + geom_point()+ ylab("Total TE content (bp)") +geom_smooth(aes(group=Species),method="lm",color="black",linetype="dashed",se = FALSE)+guides(color=FALSE) +xlab("Altitude (m)")#ggtitle("Genome Size")
grid.arrange(p1,p2,p3,p4,p5,p6,ncol=3)
library(maps)
install.packages("maps")
install.packages("mapdata")
install.packages("maptools")
library(maps)
library(mapdata)
library(maptools)
help(package='maps')
map("Mexico", col="gray90", fill=TRUE)
map("World", col="gray90", fill=TRUE)
map("world2", col="gray90", fill=TRUE)
map("world2", col="gray90", fill=TRUE, xlim=c(32,50),ylim=c(48,64))
map("world2", col="gray90", fill=TRUE, xlim=c(.05,1),ylim=c(48,64))
map("world2", col="gray90", fill=TRUE, xlim=c(.05,1),ylim=c(1,1.5))
map("world2", col="gray90", fill=TRUE)
map("world2", col="gray90", fill=TRUE)
map("world", col="gray90", fill=TRUE)
map("world", col="gray90", fill=TRUE)
map("world", col="gray90", fill=TRUE,xlim=c(10,100))
map("world", col="gray90", fill=TRUE,xlim=c(10,100))
map("world", col="gray90", fill=TRUE,xlim=c(-140,-110),ylim=c(48,64))
map("world", col="gray90", fill=TRUE)
map("world", col="gray90", fill=TRUE)
library(maps)
library(mapdata)
library(maptools)
map("world", col="gray90", fill=TRUE)
help(packages='maps')
help(packages=maps)
map("world", col="gray90", fill=TRUE,xlim=(-140,-80),ylim=c(15,35))
map("world", xlim=(-140,-80),ylim=c(15,35), col="gray90", fill=TRUE)
map("world", xlim=c(-140,-80),ylim=c(15,35), col="gray90", fill=TRUE)
map("world", xlim=c(-140,-80),ylim=c(15,35), col="gray90", fill=TRUE)
map("world", xlim=c(-140,-80),ylim=c(15,3), col="gray90", fill=TRUE)
map("world", xlim=c(-140,-80),ylim=c(15,30), col="gray90", fill=TRUE)
map("world", xlim=c(-140,-80),ylim=c(15,30), col="gray90", fill=TRUE)
map("world", xlim=c(-140,-80),ylim=c(15,35), col="gray90", fill=TRUE)
map("world", xlim=c(-140,-80),ylim=c(15,35), col="gray90", fill=TRUE)
data <- read.tab("~/Desktop/longlongsmaybe.tab")
data <- read.table("~/Desktop/longlongsmaybe.tab")
View(data)
data <- read.table("~/Desktop/longlongsmaybe.tab",header=TRUE)
View(data)
View(data)
points(data$long,data$lat,pch=19,col="red")
points(data$long,data$lat,pch=19,col="red",cex=.5)
map("world", xlim=c(-140,-80),ylim=c(15,35), col="gray90", fill=TRUE)
points(data$long,data$lat,pch=19,col="red",cex=.5)
data <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Teosinte_explore_andFISHcor/fishcorcirclesize.csv")
library(cowplot)
ggplot(data, aes(knob180, X180knobmb)) + ylab("Measured Knob Content (mb)") + xlab("Observed Knob Count") + geom_point() + geom_smooth(method="lm", se = TRUE, lty=2)+theme(axis.text=element_text(size=20),axis.title=element_text(size=20,face="bold"))
ggplot(data, aes(knob180, X180knobmb,color=factor(circle))) + ylab("Measured Knob Content (mb)") + xlab("Observed Knob Count") + geom_point() + geom_smooth(aes(group=group),method="lm", se = TRUE, lty=2,color="black",size=.5)+scale_color_manual(values=c("#00CDCD", "#000000"))+theme(legend.position="none")
View(data)
ggplot(data, aes(tr1, tr1mb,color=factor(circle))) + ylab("Measured Knob Content (mb)") + xlab("Observed Knob Count") + geom_point() + geom_smooth(aes(group=group),method="lm", se = TRUE, lty=2,color="black",size=.5)+scale_color_manual(values=c("#00CDCD", "#000000"))+theme(legend.position="none")
cor(data$tr1,data$tr1mb)
cor(data$knob180,X180knobmb)
cor(data$knob180,data$X180knobmb)
ggplot(data, aes(tr1, tr1mb,color=factor(circle))) + ylab("Measured TR1 Content (mb)") + xlab("Observed TR1 Count") + geom_point() + geom_smooth(aes(group=group),method="lm", se = TRUE, lty=2,color="black",size=.5)+scale_color_manual(values=c("#00CDCD", "#000000"))+theme(legend.position="none")
ggplot(data, aes(knob180, X180knobmb)) + ylab("Measured Knob Content (mb)") + xlab("Observed Knob Count") + geom_point() + geom_smooth(method="lm", se = TRUE, lty=2)+theme(axis.text=element_text(size=20),axis.title=element_text(size=20,face="bold"))
ggplot(data, aes(knob180, X180knobmb,color=factor(circle))) + ylab("Measured Knob Content (mb)") + xlab("Observed Knob Count") + geom_point() + geom_smooth(aes(group=group),method="lm", se = TRUE, lty=2,color="black",size=.5)#+scale_color_manual(values=c("#00CDCD", "#000000"))+theme(legend.position="none")
ggplot(data, aes(knob180, X180knobmb)) + ylab("Measured Knob Content (mb)") + xlab("Observed Knob Count") + geom_point() + geom_smooth(aes(group=group),method="lm", se = TRUE, lty=2,color="black",size=.5)#+scale_color_manual(values=c("#00CDCD", "#000000"))+theme(legend.position="none")
ggplot(data, aes(tr1, tr1mb)) + ylab("Measured TR1 Content (mb)") + xlab("Observed TR1 Count") + geom_point() + geom_smooth(aes(group=group),method="lm", se = TRUE, lty=2,color="black",size=.5)+scale_color_manual(values=c("#00CDCD", "#000000"))+theme(legend.position="none")
install.packages("dplyr")
install.packages("tidyr")
install.packages("lme4")
library(dplyr,tidyr,ggplot2)
library(lme4)
dat<-read.csv("~/Projects/results/bilinski_gsize/Mexicana/Grote_dataset.csv") %>% mutate(mom=Pop) %>% select(mom,genomesize) %>% filter(dat$mom!="x")
install.packages("ggplot2")
library(dplyr,tidyr,ggplot2)
library(dplyr,tidyr,ggplot)
dat<-read.csv("~/Projects/results/bilinski_gsize/Mexicana/Grote_dataset.csv")
dat<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Grote_dataset.csv")
dat %>% mutate(mom=Pop) %>% select(mom,genomesize) %>% filter(dat$mom!="x")
library("ggplot2")
dat %>% mutate(mom=Pop) %>% select(mom,genomesize) %>% filter(dat$mom!="x")
install.packages(magrittr)
install.packages("magrittr")
dat<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Grote_dataset.csv") %>% mutate(mom=Pop) %>% select(mom,genomesize) %>% filter(dat$mom!="x")
View(dat)
library(magrittr)
library(dplyr,tidyr,ggplot2)
library(dplyr,tidyr,"ggplot2")
library(dplyr,tidyr)
library("ggplot2")
library(lme4)
dat<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Grote_dataset.csv") %>% mutate(mom=Pop) %>% select(mom,genomesize) %>% filter(dat$mom!="x")
View(dat)
dat<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Grote_dataset.csv") %>% mutate(mom=Pop) %>% select(mom,genomesize) %>% filter(dat$mom!="x")
dat<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Grote_dataset.csv") %>% mutate(mom=Pop) %>% select(mom,genomesize) %>% filter(dat$mom!="x")
data<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Grote_dataset.csv") %>% mutate(mom=Pop) %>% select(mom,genomesize) %>% filter(dat$mom!="x")
data<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Grote_dataset.csv") %>% mutate(mom=Pop) %>% select(mom,genomesize) %>% filter(dat$mom!="x")
data<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Grote_dataset.csv")
data<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Grote_dataset.csv")
View(data)
str(data)
dat<- subset(data, data$Pop!="x")
dat$Pop <- factor(dat$Pop)
th <- lmer(dat$genomesize~(1|dat$Pop))
summary(th)
str(dat)
data<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Grote_dataset.csv")
#%>% mutate(mom=Pop) %>% select(mom,genomesize) %>% filter(dat$mom!="x")
str(data)
dat<- subset(data, data$Pop!="x")
dat$Pop <- factor(dat$Pop)
th <- lmer(dat$genomesize~(1|dat$Pop))
summary(th)
str(dat)
data<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Grote_dataset.csv")
#%>% mutate(mom=Pop) %>% select(mom,genomesize) %>% filter(dat$mom!="x")
str(data)
dat<- subset(data, data$Pop!="x")
th <- lmer(dat$genomesize~(1|dat$Pop))
summary(th)
m1 = lmer(dat$genomesize ~ (1|dat$Pop))
m1_line = unlist(VarCorr(m1))[[1]];
m1_res=attr(VarCorr(m1), "sc")^2
h2=4*(m1_line)/(m1_line+m1_res)
h2=(m1_line)/(m1_line+m1_res)
th <- lmer(dat$genomesize~(1|dat$Ind:dat$Pop))
str(dat)
data<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Grote_dataset.csv")
#%>% mutate(mom=Pop) %>% select(mom,genomesize) %>% filter(dat$mom!="x")
str(data)
dat<- subset(data, data$Pop!="x")
th <- lmer(dat$genomesize~(1|dat$Ind:dat$Pop))
summary(th)
th <- lmer(dat$genomesize~(1|dat$Ind):dat$Pop)
summary(th)
i <- levels(dat$Pop)[1]
th <- lmer(dat[i=="Pop",]$genomesize~dat[i=="Pop",]$Ind
)
print(summary(th))
d <- dat[i=="Pop",]
t <- lmer(d$genomesize~d$Ind)
d <- dat[i=="Pop",]
t <- lmer(d$genomesize~(1|d$Ind)
)
d <- dat[i=="Pop",]
t <- lmer(d$genomesize~(1|d$Ind))
str(d)
i
d <- dat[dat$Pop==i,]
str(d)
data<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Grote_dataset.csv")
#%>% mutate(mom=Pop) %>% select(mom,genomesize) %>% filter(dat$mom!="x")
str(data)
dat<- subset(data, data$Pop!="x")
dat$Pop <- factor(dat$Pop)
i
d <- dat[dat$Pop==i,]
str(dat)
str(d)
t <- lmer(d$genomesize~(1|d$Pop))
t <- lmer(d$genomesize~d$Pop)
t <- lm(d$genomesize~d$Pop)
t <- lm(d$genomesize~d$Indiv)
t <- lm(d$genomesize~d$Ind)
str(t)
summary(t)
t <- lmer(d$genomesize~(1|d$Ind))
str(data)
dat<- subset(data, data$Pop!="x")
d <- dat[dat$Pop==i,]
t <- lmer(d$genomesize~(1|d$Ind))
data<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Grote_dataset.csv")
#%>% mutate(mom=Pop) %>% select(mom,genomesize) %>% filter(dat$mom!="x")
str(data)
dat<- subset(data, data$Pop!="x")
d <- dat[dat$Pop==i,]
t <- lmer(d$genomesize~(1|d$Ind))
t
d$Ind
t <- lm(d$genomesize~(1|d$Ind))
t <- lm(d$genomesize~d$Ind)
print(summary(t))
plot(t)
h2=(m1_line)/(m1_line+m1_res)
th <- lmer(dat$genomesize~(1|dat$Ind):dat$Pop)
summary(th)
summary(th)
data <- read.table("~/Desktop/Rosato_etal_Baltdata.txt")
View(data)
data <- read.table("~/Desktop/Rosato_etal_Baltdata.txt",header=TRUE)
View(data)
cor.test(data$Altitude,data$GS)
cor.test(data$Altitude,data$MeanB)
cor.test(data$GS,data$MeanB)
cor.test(data$Altitude,data$MeanB)
cor.test(data$Altitude,data$GS)
cor.test(data$GS,data$MeanB)
cor.test(data$Altitude,data$MeanB)
lrdta <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/PhenotypeData/Final_Phenotypes/Landrace_data.csv")
lrdta$X <- NULL
data <- subset(lrdta, lrdta$Region!="SWUS")
geno <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SNP_data/Landrace_noSWUS_matrix.csv",header=TRUE,row.names=1)
A <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/PhenotypeData/Final_Phenotypes/Landrace_kinshipmatrix.csv",row.names="X")
le1 <- as.data.frame(colnames(geno))
names(le1)[1] <- "names"
le2 <- as.data.frame(data$Row.names)
#again, this is where i realize i had to rename 626.2 to 626.1
phenoorder <- merge(le1, data, by.x="names", by.y="Row.names",sort=FALSE)
lrdta <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/PhenotypeData/Final_Phenotypes/Landrace_data.csv")
lrdta$X <- NULL
data <- subset(lrdta, lrdta$Region!="SWUS")
geno <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SNP_data/Landrace_noSWUS_matrix.csv",header=TRUE,row.names=1)
A <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/PhenotypeData/Final_Phenotypes/Landrace_kinshipmatrix.csv",row.names="X")
le1 <- as.data.frame(colnames(geno))
names(le1)[1] <- "names"
le2 <- as.data.frame(data$Row.names)
phenoorder <- merge(le1, data, by.x="names", by.y="Row.names",sort=FALSE)
gs <- t ( as.matrix ( phenoorder$GS_bp, ncol = 1 ) )
gsgb <- gs/1000000000
alt <- t ( as.matrix ( phenoorder$Altitude , ncol = 1 ) )
alt <- alt - mean ( alt ) + 0.5
A <- as.matrix ( A )
View(phenoorder)
starks<-read.table("~/Desktop/starkrepeats/RIMMA_starkabund_long.txt")
View(starks)
starks<-read.table("~/Desktop/starkrepeats/RIMMA_starkabund_long.txt",header=TRUE)
View(starks)
?merge
tmp<-merge(starks,data,by="names")
tmp<-merge(starks,phenoorder,by="names")
plot(tmp$Altitude,tmp$starkcount)
plot(tmp$Altitude,tmp$starkcount,cex=0.8)
plot(tmp$Altitude,tmp$starkcount,cex=0.8,pch=19)
plot(tmp$Altitude,tmp$starkcount,cex=0.8,pch=19,ylab="Stark Reads mapping to long")
plot(tmp$Altitude,tmp$starkcount,cex=0.8,pch=19,ylab="Stark Reads mapping to long",xlab="Altitude")
plot(tmp$Total_Reads,tmp$starkcount)
plot(tmp$Total_Reads,tmp$starkcountcex=0.8,pch=19,ylab="Stark Reads mapping to long",xlab="Total Reads")
plot(tmp$Total_Reads,tmp$starkcount,cex=0.8,pch=19,ylab="Stark Reads mapping to long",xlab="Total Reads")
cor.test(tmp$Total_Reads,tmp$starkcount)
geno <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SNP_data/Landrace_noSWUS_matrix.csv",header=TRUE,row.names=1)
View(geno)
library(rjags)
library(stringr)
library(mcmcplots)
fgrote<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Grote_stats/grote_Indexmoms_groundedLL_d16NA.csv")
View(fgrote)
range(fgrote$genomesize)
6.55-5.42
range(fgrote$dailyavg3)
plot(fgrote$dailyavg3)
sort(fgrote$dailyavg3)
range(fgrote$leaf3.0)
range(fgrote$leaf3.0,na.rm = TRUE)
range(fgrote$leaf3.1,na.rm = TRUE)
range(fgrote$leaf3.2,na.rm = TRUE)
range(fgrote$leaf3.3,na.rm = TRUE)
source("~/Downloads/BergStuff/jri_emma_returnbeta.txt")
pheno <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Master_mexnucleo_pruned.csv") #phenotype data in matching order
geno <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SNP_data/Mexicana_conversion/GBS_final.txt")
geno$X <- NULL
dt <- t(geno)
A <- A.mat(dt)
gs <- t ( as.matrix (pheno$GS_bp, ncol=1) )
gsgb <- gs/1000000000
gsgb <- gsgb/2 #make GS 1C just like in maize
library ( emma )
library("rrBLUP")
library ( emma )
library("rrBLUP")
source("~/Downloads/BergStuff/jri_emma_returnbeta.txt")
pheno <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Master_mexnucleo_pruned.csv") #phenotype data in matching order
geno <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SNP_data/Mexicana_conversion/GBS_final.txt")
geno$X <- NULL
dt <- t(geno)
A <- A.mat(dt)
gs <- t ( as.matrix (pheno$GS_bp, ncol=1) )
gsgb <- gs/1000000000
gsgb <- gsgb/2 #make GS 1C just like in maize
alt <- t ( as.matrix (pheno$Altitude, ncol=1))
alt <- alt - mean(alt) + 0.5
knob180 <- t ( as.matrix (pheno$X180knobbp, ncol=1) )
knob180gb <- knob180/1000000000
knob180gb <- knob180gb/2
TR1 <- t ( as.matrix (pheno$TR1bp, ncol=1))
TR1gb <- TR1/1000000000
TR1gb <- TR1gb/2
plot(TR1gb)
TR1gb
plot(TR1gb[1])
plot(TR1gb[,1])
plot(TR1gb[1,])
plot(pheno$TR1bp,pheno$Altitude)
plot(pheno$Altitude,pheno$TR1bp)
plot(pheno$Altitude,pheno$X180knobbp)
plot(pheno$Altitude,pheno$X1C_GS)
TR1 <- t ( as.matrix (pheno$TR1bp, ncol=1))
TR1gb <- TR1/1000000000
TR1gb <- TR1gb/2
TEs <- t ( as.matrix (pheno$TotalTebp, ncol=1))
TEsgb <- TEs/1000000000
TEsgb <- TEsgb/2
#Test alt / GS
out.gsgb <- emma.REML.t_beta( gsgb,alt,K=A)
out.gsgb
out.knob <- emma.REML.t_beta( knob180gb,alt,K=A)
out.knob
out.tr1 <- emma.REML.t_beta( TR1gb,alt,K=A)
out.tr1
out.TE <- emma.REML.t_beta(TEsgb,alt,K=A)
out.TE
fin.knob <- emma.REML.t_beta ( knob180gb , alt , X0 =  cbind ( rep ( 1 , 93 ) , c ( gsgb ) ) , K = A )
fin.knob
fin.tr1 <- emma.REML.t_beta ( TR1gb , alt , X0 =  cbind ( rep ( 1 , 93 ) , c ( gsgb ) ) , K = A )
fin.tr1
fin.tr1 <- emma.REML.t_beta ( TR1gb , alt , X0 =  cbind ( rep ( 1 , 70 ) , c ( gsgb ) ) , K = A )
fin.tr1
library(emma)
library("rrBLUP")
setwd("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SelectionTests/SelectionTestData/")
source("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SelectionTests/jri_emma_returnbeta.txt")
gbs<-read.csv("GBS_alt_threshold_final.txt")
gbs$X <- NULL
dt<-(t(gbs))
A<-A.mat(dt)
pheno<-read.csv("Pheno_alt_threshold_ordered.csv")
#tassels <- read.table("~/Desktop/twentymissing.grm.raw",sep="\t")
#A <- as.matrix(tassels)
gs <- t ( as.matrix (pheno$GS_bp, ncol=1) )
gsgb <- gs/2000000000
gsgb
alt <- t ( as.matrix (pheno$Altitude, ncol=1))
alt <- alt - mean(alt) + 0.5
knob180 <- t ( as.matrix (pheno$X180knobbp, ncol=1))
knob180gb <- knob180/2000000000
knob180gb<- t ( as.matrix (scale(pheno$X180knobbp), ncol=1))
TR1 <- t ( as.matrix (pheno$TR1bp, ncol=1))
TR1gb <- TR1/2000000000
TR1gb <- t ( as.matrix (scale(pheno$TR1bp), ncol=1))
Te <- t ( as.matrix (pheno$TotalTebp, ncol=1))
Tegb <- Te/2000000000
Tegb<- t ( as.matrix (scale(pheno$TotalTebp), ncol=1))
out.gsgb <- emma.REML.t_beta( gsgb,alt,K=A)
out.gsgb
out.knob <- emma.REML.t_beta(knob180gb,alt,K=A)
out.knob
out.tr1 <- emma.REML.t_beta(TR1gb,alt,K=A)
out.tr1
out.te <- emma.REML.t_beta(Tegb,alt,K=A)
out.te
fin.gs <- emma.REML.t_beta ( gsgb , alt , X0 =  cbind ( rep ( 1 , 70 ) , c ( TR1gb ) ) , K = A )
fin.gs
fin.knob <- emma.REML.t_beta ( knob180gb , alt , X0 =  cbind ( rep ( 1 , 70 ) , c ( gsgb ) ) , K = A )
fin.knob
View(Te)
View(pheno)
fin.knob <- emma.REML.t_beta ( knob180gb , alt , X0 =  cbind ( rep ( 1 , 70 ) , c ( gsgb ) ) , K = A )
fin.knob
fin.tr1 <- emma.REML.t_beta ( TR1gb , alt , X0 =  cbind ( rep ( 1 , 70 ) , c ( gsgb ) ) , K = A )
fin.tr1
fin.knob <- emma.REML.t_beta ( knob180gb , alt , X0 =  cbind ( rep ( 1 , 70 ) , c ( gsgb ) ) , K = A )
fin.knob
fin.tr1 <- emma.REML.t_beta ( TR1gb , alt , X0 =  cbind ( rep ( 1 , 70 ) , c ( gsgb ) ) , K = A )
fin.tr1
fin.knob <- emma.REML.t_beta ( knob180gb , alt , X0 =  cbind ( rep ( 1 , 70 ) , c ( gsgb ) ) , K = A )
fin.knob
starks<-read.table("~/Desktop/starkrepeats/starkabund_longer.txt",header=TRUE)
starks<-read.table("~/Desktop/starkrepeats/starkabund_longer.txt",header=TRUE)
View(starks)
lrdta <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/PhenotypeData/Final_Phenotypes/Landrace_data.csv")
lrdta$X <- NULL
data <- subset(lrdta, lrdta$Region!="SWUS")
geno <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SNP_data/Landrace_noSWUS_matrix.csv",header=TRUE,row.names=1)
A <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/PhenotypeData/Final_Phenotypes/Landrace_kinshipmatrix.csv",row.names="X")
le1 <- as.data.frame(colnames(geno))
names(le1)[1] <- "names"
le2 <- as.data.frame(data$Row.names)
phenoorder <- merge(le1, data, by.x="names", by.y="Row.names",sort=FALSE)
gs <- t ( as.matrix ( phenoorder$GS_bp, ncol = 1 ) )
gsgb <- gs/1000000000
alt <- t ( as.matrix ( phenoorder$Altitude , ncol = 1 ) )
alt <- alt - mean ( alt ) + 0.5
A <- as.matrix ( A )
source("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SelectionTests/jri_emma_returnbeta.txt")
tmp<-merge(starks,phenoorder,by="names")
View(tmp)
plot(tmp$Altitude,tmp$starkcount,cex=0.8,pch=19,ylab="Stark Reads mapping to long",xlab="Altitude")
plot(tmp$Total_Reads,tmp$starkcount,cex=0.8,pch=19,ylab="Stark Reads mapping to long",xlab="Total Reads")
cor.test(tmp$Total_Reads,tmp$starkcount)
plot(tmp$Altitude,tmp$starkcount,cex=0.8,pch=19,ylab="Stark Reads mapping to long",xlab="Altitude")
plot(tmp$Altitude,tmp$starkcount,cex=0.8,pch=19,ylab="Reads mapping to B repeats",xlab="Altitude")
plot(tmp$Altitude,tmp$starkcount,cex=0.8,pch=19,ylab="Reads mapping to B repeats",xlab="Altitude (m)")
setwd("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/Mexicana/Grote_stats/Gridcomparison/")
chain1<- read.csv("FINAL_4.0ll_.003cellsizechain1.csv")
chain2<- read.csv("FINAL_4.0ll_.003cellsizechain2.csv")
both<- rbind(chain1,chain2)
input4.0_.3 <- density(both$beta.GS,adjust=1.3,from=-.1,to=.1)
inputcontrast <- density(both$GS.contrast,adjust=1.3,from=-.1,to=.1)
par(mfrow=c(2,1))
plot(input4.0_.3,ylab="",yaxt="n",bty="n",lwd=2,cex.axis=1.5,main = expression(paste("Posterior Distribution of ", gamma[GS])),xlab="")
#polygon(input4.0_.3, col=rgb(1, 1, 0, .2, names = NULL, maxColorValue = 1), border="gray")
abline(v=0,col="red",lty=2,lwd=2)
plot(inputcontrast,ylab="",yaxt="n",bty="n",lwd=2,cex.axis=1.5,main= expression(paste("Posterior Distribution of ", beta[GS])),xlab="")
par(mfrow=c(2,1))
plot(input4.0_.3,ylab="",yaxt="n",bty="n",lwd=2,cex.axis=1.5,main = expression(paste("Posterior Density of ", gamma[GS])),xlab="")
#polygon(input4.0_.3, col=rgb(1, 1, 0, .2, names = NULL, maxColorValue = 1), border="gray")
abline(v=0,col="red",lty=2,lwd=2)
plot(inputcontrast,ylab="",yaxt="n",bty="n",lwd=2,cex.axis=1.5,main= expression(paste("Posterior Density of ", beta[GS])),xlab="")
#polygon(inputcontrast, col=rgb(.1, .1, .5, .2, names = NULL, maxColorValue = 1), border="white")
abline(v=0,col="red",lty=2,lwd=2)
