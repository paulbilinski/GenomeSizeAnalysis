alt <- alt - mean ( alt ) + 0.5
A <- as.matrix ( A )
source("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SelectionTests/jri_emma_returnbeta.txt")
out.gsgb <- emma.REML.t_beta ( gsgb , alt , K = A )
out.gsgb
library(emma)
library("rrBLUP")
source("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SelectionTests/jri_emma_returnbeta.txt")
gbs<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SelectionTests/SelectionTestData/GBS_alt_threshold_final.txt")
gbs<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SelectionTests/SelectionTestData/GBS_alt_threshold_final.txt")
gbs$X <- NULL
dt<-(t(gbs))
A<-A.mat(dt)
pheno<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SelectionTests/SelectionTestData/Pheno_alt_threshold_ordered.csv")
pheno<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SelectionTests/SelectionTestData/Pheno_alt_threshold_ordered.csv")
gs <- t ( as.matrix (pheno$GS_bp, ncol=1) )
gsgb <- gs/2000000000
gsgb
alt <- t ( as.matrix (pheno$Altitude, ncol=1))
alt <- alt - mean(alt) + 0.5
gsgb
alt <- t ( as.matrix (pheno$Altitude, ncol=1))
alt <- alt - mean(alt) + 0.5
knob180 <- t ( as.matrix (pheno$X180knobbp, ncol=1))
knob180gb <- knob180/2000000000
knob180gb<- t ( as.matrix (scale(pheno$X180knobbp), ncol=1))
TR1 <- t ( as.matrix (pheno$TR1bp, ncol=1))
TR1gb <- TR1/2000000000
TR1gb <- t ( as.matrix (scale(pheno$TR1bp), ncol=1))
Te <- t ( as.matrix (pheno$TotalTebp, ncol=1))
Tegb <- Te/2000000000
Tegb<- t ( as.matrix (scale(pheno$TotalTebp), ncol=1))
out.gsgb <- emma.REML.t_beta( gsgb,alt,K=A)
out.gsgb
out.knob <- emma.REML.t_beta(knob180gb,alt,K=A)
out.knob
out.tr1 <- emma.REML.t_beta(TR1gb,alt,K=A)
out.tr1
out.te <- emma.REML.t_beta(Tegb,alt,K=A)
out.te
fin.gs <- emma.REML.t_beta ( gsgb , alt , X0 =  cbind ( rep ( 1 , 70 ) , c ( TR1gb ) ) , K = A )
fin.gs
fin.knob <- emma.REML.t_beta ( knob180gb , alt , X0 =  cbind ( rep ( 1 , 70 ) , c ( gsgb ) ) , K = A )
fin.knob
library ( emma )
library("rrBLUP")
lrdta <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/PhenotypeData/Final_Phenotypes/Landrace_data.csv")
lrdta <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/PhenotypeData/Final_Phenotypes/Landrace_data.csv")
lrdta$X <- NULL
lrdta$X <- NULL
data <- subset(lrdta, lrdta$Region!="SWUS")
data <- subset(lrdta, lrdta$Region!="SWUS")
geno <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SNP_data/Landrace_noSWUS_matrix.csv",header=TRUE,row.names=1)
lrdta <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/PhenotypeData/Final_Phenotypes/Landrace_data.csv")
lrdta$X <- NULL
data <- subset(lrdta, lrdta$Region!="SWUS")
geno <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SNP_data/Landrace_noSWUS_matrix.csv",header=TRUE,row.names=1)
A <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/PhenotypeData/Final_Phenotypes/Landrace_kinshipmatrix.csv",row.names="X")
le1 <- as.data.frame(colnames(geno))
names(le1)[1] <- "names"
le2 <- as.data.frame(data$Row.names)
phenoorder <- merge(le1, data, by.x="names", by.y="Row.names",sort=FALSE)
gs <- t ( as.matrix ( phenoorder$GS_bp, ncol = 1 ) )
gsgb <- gs/1000000000
gsgb <- gs/1000000000
alt <- t ( as.matrix ( phenoorder$Altitude , ncol = 1 ) )
gs <- t ( as.matrix ( phenoorder$GS_bp, ncol = 1 ) )
gsgb <- gs/1000000000
alt <- t ( as.matrix ( phenoorder$Altitude , ncol = 1 ) )
alt <- alt - mean ( alt ) + 0.5
A <- as.matrix ( A )
source("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SelectionTests/jri_emma_returnbeta.txt")
out.gsgb <- emma.REML.t_beta ( gsgb , alt , K = A )
knob <- t ( as.matrix ( phenoorder$X180knobbp, ncol = 1 ) )
knobgb <- knob/1000000000
out.knobgb <- emma.REML.t_beta ( knobgb , alt , K = A )
out.knobgb
tr1 <- t ( as.matrix ( phenoorder$TR1bp, ncol = 1 ) )
tr1gb <- tr1/1000000000
out.tr1gb <- emma.REML.t_beta ( tr1gb , alt , K = A )
out.tr1gb
centc <- t ( as.matrix ( phenoorder$CentCbp, ncol = 1 ) )
centcgb <- centc/1000000000
out.centcgb <- emma.REML.t_beta ( centcgb , alt , K = A )
out.centcgb
tes <- t ( as.matrix ( phenoorder$TotallTebp, ncol = 1 ) )
tesgb <- tes/1000000000
out.tesgb <- emma.REML.t_beta ( tesgb , alt , K = A )
out.tesgb
noknob <- t ( as.matrix ( phenoorder$Gsnoknob, ncol = 1 ) )
noknobgb <- noknob/1000000000
out.noknobgb <- emma.REML.t ( noknobgb , alt , K = A )
out.noknobgb
tes <- t ( as.matrix ( phenoorder$TotallTebp, ncol = 1 ) )
tesgb <- tes/1000000000
fin.te <- emma.REML.t_beta ( tes , alt , X0 =  cbind ( rep ( 1 , 83 ) , c ( gsgb ) ) , K = A )
fin.te
fin.knob <- emma.REML.t_beta ( knobgb , alt , X0 =  cbind ( rep ( 1 , 83 ) , c ( gsgb ) ) , K = A )
tes <- t ( as.matrix ( phenoorder$TotallTebp, ncol = 1 ) )
tesgb <- tes/1000000000
fin.te <- emma.REML.t_beta ( tes , alt , X0 =  cbind ( rep ( 1 , 83 ) , c ( gsgb ) ) , K = A )
fin.te
fin.knob <- emma.REML.t_beta ( knobgb , alt , X0 =  cbind ( rep ( 1 , 83 ) , c ( gsgb ) ) , K = A )
fin.knob
fin.tr1 <- emma.REML.t_beta ( tr1gb , alt , X0 =  cbind ( rep ( 1 , 83 ) , c ( gsgb ) ) , K = A )
fin.tr1
fin.knob <- emma.REML.t_beta ( knobgb , alt , X0 =  cbind ( rep ( 1 , 83 ) , c ( gsgb ) ) , K = A )
fin.knob
fin.tr1 <- emma.REML.t_beta ( tr1gb , alt , X0 =  cbind ( rep ( 1 , 83 ) , c ( gsgb ) ) , K = A )
fin.tr1
library(emma)
library("rrBLUP")
source("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SelectionTests/jri_emma_returnbeta.txt")
gbs<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SelectionTests/SelectionTestData/GBS_alt_threshold_final.txt")
gbs<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SelectionTests/SelectionTestData/GBS_alt_threshold_final.txt")
gbs$X <- NULL
dt<-(t(gbs))
A<-A.mat(dt)
pheno<-read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SelectionTests/SelectionTestData/Pheno_alt_threshold_ordered.csv")
gs <- t ( as.matrix (pheno$GS_bp, ncol=1) )
gsgb <- gs/2000000000
gsgb <- gs/2000000000
gsgb
alt <- t ( as.matrix (pheno$Altitude, ncol=1))
alt <- alt - mean(alt) + 0.5
knob180 <- t ( as.matrix (pheno$X180knobbp, ncol=1))
knob180gb <- knob180/2000000000
knob180gb<- t ( as.matrix (scale(pheno$X180knobbp), ncol=1))
knob180 <- t ( as.matrix (pheno$X180knobbp, ncol=1))
knob180gb <- knob180/2000000000
knob180gb<- t ( as.matrix (scale(pheno$X180knobbp), ncol=1))
TR1 <- t ( as.matrix (pheno$TR1bp, ncol=1))
TR1gb <- TR1/2000000000
TR1gb <- t ( as.matrix (scale(pheno$TR1bp), ncol=1))
TR1gb <- t ( as.matrix (scale(pheno$TR1bp), ncol=1))
Te <- t ( as.matrix (pheno$TotalTebp, ncol=1))
Tegb <- Te/2000000000
out.gsgb <- emma.REML.t_beta( gsgb,alt,K=A)
out.gsgb
out.knob <- emma.REML.t_beta(knob180gb,alt,K=A)
out.knob
out.tr1 <- emma.REML.t_beta(TR1gb,alt,K=A)
out.tr1
out.te <- emma.REML.t_beta(Tegb,alt,K=A)
out.te
fin.gs <- emma.REML.t_beta ( gsgb , alt , X0 =  cbind ( rep ( 1 , 70 ) , c ( TR1gb ) ) , K = A )
fin.gs
fin.knob <- emma.REML.t_beta ( knob180gb , alt , X0 =  cbind ( rep ( 1 , 70 ) , c ( gsgb ) ) , K = A )
fin.knob <- emma.REML.t_beta ( knob180gb , alt , X0 =  cbind ( rep ( 1 , 70 ) , c ( gsgb ) ) , K = A )
fin.knob
options(scipen = 999)
fin.knob <- emma.REML.t_beta ( knob180gb , alt , X0 =  cbind ( rep ( 1 , 70 ) , c ( gsgb ) ) , K = A )
fin.knob
fin.tr1 <- emma.REML.t_beta ( TR1gb , alt , X0 =  cbind ( rep ( 1 , 70 ) , c ( gsgb ) ) , K = A )
fin.tr1
fin.te <- emma.REML.t_beta ( Tegb , alt , X0 =  cbind ( rep ( 1 , 70 ) , c ( gsgb ) ) , K = A )
fin.te
setwd("~/Documents/Projects/Genome_Size_Analysis/GenomeSizeZea_Analyses/SelectionTests/Maize/")
library(data.table)
library(rrBLUP)
library(emma)
library(OpenMx)
options(scipen = 999)
source("../jri_emma_returnbeta.txt")
gbs<-read.table("~/Desktop/PaulCS/PaulCellSize_ZeaGBSv27raw_Poly_minSiteCov.3_minTaxaCov.1.RndImp.Endelman.kinship.txt",skip=3,row.names = 1)
mzfull <-gbs[1:77,1:77]
A <- as.matrix(mzfull)
iden <- as.data.frame(substr(row.names(mzfull),1,9))
colnames(iden)[1] <- "identifier"
chipgeno <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SNP_data/Landrace_noSWUS_matrix.csv",header=TRUE,row.names=1)
colnames(chipgeno)
chipgeno[,c(4,15,17,19,36,53)] <- NULL
A <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/PhenotypeData/Final_Phenotypes/Landrace_kinshipmatrix.csv",row.names="X")
dt <- t(chipgeno)
A <- A.mat(dt)
A <- as.matrix(A)
pheno<- read.csv("Landrace_data.csv")
pheno$X <- NULL
pheno2 <- subset(pheno, pheno$Region!="SWUS")
pheno2$iden <- substr(pheno2$Row.names,1,9)
colnames(chipgeno)
iden <- as.data.frame(substr(colnames(chipgeno),1,9))
colnames(iden)[1] <- "identifier"
iden
phenoorder <- merge(iden, pheno2, by.x="identifier", by.y="iden",sort=FALSE)
gs <- t ( as.matrix ( phenoorder$GS_bp, ncol = 1 ) )
gsgb <- gs/1000000000
alt <- t ( as.matrix ( phenoorder$Altitude , ncol = 1 ) )
alt <- alt - mean ( alt ) + 0.5
out.gsgb <- emma.REML.t_beta ( gsgb , alt , K = A )
out.gsgb
knob <- t ( as.matrix ( phenoorder$X180knobbp, ncol = 1 ) )
knobgb <- knob/1000000000
out.knobgb <- emma.REML.t_beta ( knobgb , alt , K = A )
out.knobgb
tr1 <- t ( as.matrix ( phenoorder$TR1bp, ncol = 1 ) )
tr1gb <- tr1/1000000000
out.tr1gb <- emma.REML.t_beta ( tr1gb , alt , K = A )
out.tr1gb
centc <- t ( as.matrix ( phenoorder$CentCbp, ncol = 1 ) )
centcgb <- centc/1000000000
out.centcgb <- emma.REML.t_beta ( centcgb , alt , K = A )
out.centcgb
tes <- t ( as.matrix ( phenoorder$TotallTebp, ncol = 1 ) )
tesgb <- tes/1000000000
out.tesgb <- emma.REML.t_beta ( tesgb , alt , K = A )
out.tesgb
fin.te <- emma.REML.t_beta ( tes , alt , X0 =  cbind ( rep ( 1 , 77 ) , c ( gsgb ) ) , K = A )
fin.te
fin.knob <- emma.REML.t_beta ( knobgb , alt , X0 =  cbind ( rep ( 1 , 77 ) , c ( gsgb ) ) , K = A )
fin.knob
fin.tr1 <- emma.REML.t_beta ( tr1gb , alt , X0 =  cbind ( rep ( 1 , 77 ) , c ( gsgb ) ) , K = A )
fin.tr1
A.chip
A.chip <- A
gbs<-read.table("~/Desktop/PaulCS/PaulCellSize_ZeaGBSv27raw_Poly_minSiteCov.3_minTaxaCov.1.RndImp.Endelman.kinship.txt",skip=3,row.names = 1)
mzfull <-gbs[1:77,1:77]
cor(mzfull,A.chip)
gbs<-read.table("~/Desktop/PaulCS/PaulCellSize_ZeaGBSv27raw_Poly_minSiteCov.3_minTaxaCov.1.RndImp.Endelman.kinship.txt",skip=3,row.names = 1)
mzfull <-as.matrix(gbs[1:77,1:77])
cor(mzfull,A.chip)
cor(c(mzfull),c(A.chip))
rmarkdown::render("Maize_selectiontests.R", "pdf_document")
chipgeno <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SNP_data/Landrace_noSWUS_matrix.csv",header=TRUE,row.names=1)
colnames(chipgeno)
iden <- as.data.frame(substr(colnames(chipgeno),1,9))
colnames(iden)[1] <- "identifier"
chipgeno[,c(4,15,17,19,36,53)] <- NULL
dt <- t(chipgeno)
A <- A.mat(dt)
A <- as.matrix(A)
A.chip <- A
cor(c(mzfull),c(A.chip))
pheno<- read.csv("Landrace_data.csv")
pheno$X <- NULL
pheno2 <- subset(pheno, pheno$Region!="SWUS")
pheno2$iden <- substr(pheno2$Row.names,1,9)
phenoorder <- merge(iden, pheno2, by.x="identifier", by.y="iden",sort=FALSE)
gs <- t ( as.matrix ( phenoorder$GS_bp, ncol = 1 ) )
gsgb <- gs/1000000000
alt <- t ( as.matrix ( phenoorder$Altitude , ncol = 1 ) )
alt <- alt - mean ( alt ) + 0.5
out.gsgb <- emma.REML.t_beta ( gsgb , alt , K = A )
out.gsgb
out.gsgb <- emma.REML.t_beta ( gsgb , alt , K = A )
setwd("~/Documents/Projects/Genome_Size_Analysis/GenomeSizeZea_Analyses/SelectionTests/Maize/")
options(scipen = 999)
library(data.table)
library(rrBLUP)
library(emma)
library(OpenMx)
source("../jri_emma_returnbeta.txt")
chipgeno <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SNP_data/Landrace_noSWUS_matrix.csv",header=TRUE,row.names=1)
colnames(chipgeno)
iden <- as.data.frame(substr(colnames(chipgeno),1,9))
colnames(iden)[1] <- "identifier"
chipgeno[,c(4,15,17,19,36,53)] <- NULL
dt <- t(chipgeno)
A <- A.mat(dt)
A <- as.matrix(A)
A.chip <- A
pheno<- read.csv("Landrace_data.csv")
pheno$X <- NULL
pheno2 <- subset(pheno, pheno$Region!="SWUS")
pheno2$iden <- substr(pheno2$Row.names,1,9)
phenoorder <- merge(iden, pheno2, by.x="identifier", by.y="iden",sort=FALSE)
gs <- t ( as.matrix ( phenoorder$GS_bp, ncol = 1 ) )
gsgb <- gs/1000000000
alt <- t ( as.matrix ( phenoorder$Altitude , ncol = 1 ) )
alt <- alt - mean ( alt ) + 0.5
out.gsgb <- emma.REML.t_beta ( gsgb , alt , K = A )
iden <- as.data.frame(substr(colnames(chipgeno),1,9))
colnames(iden)[1] <- "identifier"
chipgeno[,c(4,15,17,19,36,53)] <- NULL
iden <- as.data.frame(substr(colnames(chipgeno),1,9))
colnames(iden)[1] <- "identifier"
chipgeno[,c(4,15,17,19,36,53)] <- NULL
dt <- t(chipgeno)
A <- A.mat(dt)
A <- as.matrix(A)
A.chip <- A
chipgeno <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SNP_data/Landrace_noSWUS_matrix.csv",header=TRUE,row.names=1)
colnames(chipgeno)
chipgeno[,c(4,15,17,19,36,53)] <- NULL
iden <- as.data.frame(substr(colnames(chipgeno),1,9))
colnames(iden)[1] <- "identifier"
dt <- t(chipgeno)
A <- A.mat(dt)
A <- as.matrix(A)
pheno<- read.csv("Landrace_data.csv")
pheno$X <- NULL
pheno2 <- subset(pheno, pheno$Region!="SWUS")
pheno2$iden <- substr(pheno2$Row.names,1,9)
phenoorder <- merge(iden, pheno2, by.x="identifier", by.y="iden",sort=FALSE)
gs <- t ( as.matrix ( phenoorder$GS_bp, ncol = 1 ) )
gsgb <- gs/1000000000
alt <- t ( as.matrix ( phenoorder$Altitude , ncol = 1 ) )
alt <- alt - mean ( alt ) + 0.5
out.gsgb <- emma.REML.t_beta ( gsgb , alt , K = A )
out.gsgb
knob <- t ( as.matrix ( phenoorder$X180knobbp, ncol = 1 ) )
knobgb <- knob/1000000000
out.knobgb <- emma.REML.t_beta ( knobgb , alt , K = A )
out.knobgb
tr1 <- t ( as.matrix ( phenoorder$TR1bp, ncol = 1 ) )
tr1gb <- tr1/1000000000
out.tr1gb <- emma.REML.t_beta ( tr1gb , alt , K = A )
out.tr1gb
centc <- t ( as.matrix ( phenoorder$CentCbp, ncol = 1 ) )
centcgb <- centc/1000000000
out.centcgb <- emma.REML.t_beta ( centcgb , alt , K = A )
out.centcgb
tes <- t ( as.matrix ( phenoorder$TotallTebp, ncol = 1 ) )
tesgb <- tes/1000000000
out.tesgb <- emma.REML.t_beta ( tesgb , alt , K = A )
out.tesgb
fin.te <- emma.REML.t_beta ( tes , alt , X0 =  cbind ( rep ( 1 , 77 ) , c ( gsgb ) ) , K = A )
fin.te
fin.knob <- emma.REML.t_beta ( knobgb , alt , X0 =  cbind ( rep ( 1 , 77 ) , c ( gsgb ) ) , K = A )
fin.knob
fin.tr1 <- emma.REML.t_beta ( tr1gb , alt , X0 =  cbind ( rep ( 1 , 77 ) , c ( gsgb ) ) , K = A )
fin.tr1
rmarkdown::render("Maize_selectiontests.R", "pdf_document")
chipgeno <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SNP_data/Landrace_noSWUS_matrix.csv",header=TRUE,row.names=1)
colnames(chipgeno)
chipgeno <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SNP_data/Landrace_noSWUS_matrix.csv",header=TRUE,row.names=1)
colnames(chipgeno)
chipgeno[,c(4,15,17,19,36,53)] <- NULL
iden <- as.data.frame(substr(colnames(chipgeno),1,9))
colnames(iden)[1] <- "identifier"
dt <- t(chipgeno)
A <- A.mat(dt)
A <- as.matrix(A)
pheno<- read.csv("Landrace_data.csv")
pheno$X <- NULL
pheno2 <- subset(pheno, pheno$Region!="SWUS")
pheno2$iden <- substr(pheno2$Row.names,1,9)
phenoorder <- merge(iden, pheno2, by.x="identifier", by.y="iden",sort=FALSE)
gs <- t ( as.matrix ( phenoorder$GS_bp, ncol = 1 ) )
gsgb <- gs/1000000000
alt <- t ( as.matrix ( phenoorder$Altitude , ncol = 1 ) )
alt <- alt - mean ( alt ) + 0.5
out.gsgb <- emma.REML.t_beta ( gsgb , alt , K = A )
source("../jri_emma_returnbeta.txt")
options(scipen = 999)
library(data.table)
library(rrBLUP)
library(emma)
library(OpenMx)
source("../jri_emma_returnbeta.txt")
out.gsgb <- emma.REML.t_beta ( gsgb , alt , K = A )
out.gsgb
setwd("~/Documents/Projects/Genome_Size_Analysis/GenomeSizeZea_Analyses/SelectionTests/Maize/")
options(scipen = 999)
library(data.table)
library(rrBLUP)
library(emma)
library(OpenMx)
source("../jri_emma_returnbeta.txt")
chipgeno <- read.csv("~/Documents/Projects/Genome_Size_Analysis/Github_ParallelGS/SNP_data/Landrace_noSWUS_matrix.csv",header=TRUE,row.names=1)
colnames(chipgeno)
chipgeno[,c(4,15,17,19,36,53)] <- NULL
iden <- as.data.frame(substr(colnames(chipgeno),1,9))
colnames(iden)[1] <- "identifier"
dt <- t(chipgeno)
A <- A.mat(dt)
A <- as.matrix(A)
pheno<- read.csv("Landrace_data.csv")
pheno$X <- NULL
pheno2 <- subset(pheno, pheno$Region!="SWUS")
pheno2$iden <- substr(pheno2$Row.names,1,9)
phenoorder <- merge(iden, pheno2, by.x="identifier", by.y="iden",sort=FALSE)
gs <- t ( as.matrix ( phenoorder$GS_bp, ncol = 1 ) )
gsgb <- gs/1000000000
alt <- t ( as.matrix ( phenoorder$Altitude , ncol = 1 ) )
alt <- alt - mean ( alt ) + 0.5
out.gsgb <- emma.REML.t_beta ( gsgb , alt , K = A )
out.gsgb
rmarkdown::render("Maize_selectiontests.R", "pdf_document")
rmarkdown::render("Maize_selectiontests.R", "pdf_document")
rmarkdown::render("Maize_selectiontests.R", "pdf_document")
setwd("~/Desktop/Maize_gbs/")
gbs<-read.table("maizegbs_hundredperc.txt", header=TRUE) #column names still not correct
setwd("~/Desktop/Maize_gbs/")
gbs<-read.table("maizegbs_hundredperc.txt", header=TRUE) #column names still not correct
View(gbs)
View(gbs)
row.names(gbs)<-gbs$Taxa
gbs$Taxa<- NULL
gbs2<- t(gbs)
gbs2<- gsub("G", "GG", gbs2)
gbs2<- gsub("A", "AA", gbs2)
gbs2<- gsub("C", "CC", gbs2)
gbs2<- gsub("T", "TT", gbs2)
gbs2<- gsub("Y", "CT", gbs2)
gbs2<- gsub("R", "AG", gbs2)
gbs2<- gsub("W", "AT", gbs2)
gbs2<- gsub("S", "GC", gbs2)
gbs2<- gsub("K", "TG", gbs2)
gbs2<- gsub("M", "CA", gbs2)
gbs2<- gsub("-", "NA", gbs2)
gbs2<- gsub("N", "NA", gbs2)
gbs2<- gsub("0", "NA", gbs2)
gbs2<- gsub("NAA", "NA", gbs2)
row.names(gbs2)<- NULL
write.csv(gbs2, "GBS_forSNPconversion.txt")
write.csv(gbs2, "GBS_forSNPconversion.txt",quote = FALSE)
setwd("~/Documents/Projects/Genome_Size_Analysis/GenomeSizeZea_Analyses/SelectionTests/Maize/")
source('~/Documents/Projects/Genome_Size_Analysis/GenomeSizeZea_Analyses/SelectionTests/Maize/Maize_selectiontests.R', echo=TRUE)
hundgbs<-read.csv("~/Desktop/Maize_gbs/convertedsnpsgbs.txt")
hundgbs<-read.csv("~/Desktop/Maize_gbs/convertedsnpsgbs.txt")
View(hundgbs)
hundgbs$X<-NULL
dt <- t(hundgbs)
A <- A.mat(dt)
pheno<- read.csv("Landrace_data.csv")
pheno$X <- NULL
pheno2 <- subset(pheno, pheno$Region!="SWUS")
pheno2$iden <- substr(pheno2$Row.names,1,9)
phenoorder <- merge(iden, pheno2, by.x="identifier", by.y="iden",sort=FALSE)
gbs<-read.table("~/Desktop/PaulCS/PaulCellSize_ZeaGBSv27raw_Poly_minSiteCov.3_minTaxaCov.1.RndImp.Endelman.kinship.txt",skip=3,row.names = 1)
mzfull <-as.matrix(gbs[1:77,1:77])
A <- as.matrix(mzfull)
iden <- as.data.frame(substr(row.names(mzfull),1,9))
colnames(iden)[1] <- "identifier"
hundgbs<-read.csv("~/Desktop/Maize_gbs/convertedsnpsgbs.txt")
hundgbs$X<-NULL
dt <- t(hundgbs)
A <- A.mat(dt)
gbs<-read.table("~/Desktop/PaulCS/PaulCellSize_ZeaGBSv27raw_Poly_minSiteCov.3_minTaxaCov.1.RndImp.Endelman.kinship.txt",skip=3,row.names = 1)
mzfull <-as.matrix(gbs[1:77,1:77])
A <- as.matrix(mzfull)
iden <- as.data.frame(substr(row.names(mzfull),1,9))
colnames(iden)[1] <- "identifier"
hundgbs<-read.csv("~/Desktop/Maize_gbs/convertedsnpsgbs.txt")
hundgbs$X<-NULL
dt <- t(hundgbs)
A.2 <- A.mat(dt)
cor(c(A),c(A.2))
pheno<- read.csv("Landrace_data.csv")
pheno$X <- NULL
pheno2 <- subset(pheno, pheno$Region!="SWUS")
pheno2$iden <- substr(pheno2$Row.names,1,9)
phenoorder <- merge(iden, pheno2, by.x="identifier", by.y="iden",sort=FALSE)
A <- A.2
gs <- t ( as.matrix ( phenoorder$GS_bp, ncol = 1 ) )
gsgb <- gs/1000000000
alt <- t ( as.matrix ( phenoorder$Altitude , ncol = 1 ) )
alt <- alt - mean ( alt ) + 0.5
out.gsgb <- emma.REML.t_beta ( gsgb , alt , K = A )
out.gsgb
options(scipen = 999)
library(data.table)
library(rrBLUP)
library(emma)
library(OpenMx)
source("../jri_emma_returnbeta.txt")
out.gsgb <- emma.REML.t_beta ( gsgb , alt , K = A )
out.gsgb
knob <- t ( as.matrix ( phenoorder$X180knobbp, ncol = 1 ) )
knobgb <- knob/1000000000
out.knobgb <- emma.REML.t_beta ( knobgb , alt , K = A )
out.knobgb
tr1 <- t ( as.matrix ( phenoorder$TR1bp, ncol = 1 ) )
tr1gb <- tr1/1000000000
out.tr1gb <- emma.REML.t_beta ( tr1gb , alt , K = A )
out.tr1gb
tes <- t ( as.matrix ( phenoorder$TotallTebp, ncol = 1 ) )
tesgb <- tes/1000000000
out.tesgb <- emma.REML.t_beta ( tesgb , alt , K = A )
out.tesgb
fin.te <- emma.REML.t_beta ( tes , alt , X0 =  cbind ( rep ( 1 , 77 ) , c ( gsgb ) ) , K = A )
fin.te
fin.knob <- emma.REML.t_beta ( knobgb , alt , X0 =  cbind ( rep ( 1 , 77 ) , c ( gsgb ) ) , K = A )
fin.knob
fin.tr1 <- emma.REML.t_beta ( tr1gb , alt , X0 =  cbind ( rep ( 1 , 77 ) , c ( gsgb ) ) , K = A )
fin.tr1
data <- read.csv("~/Documents/Projects/Huff_CentromereEvo/Github_centrepeat/abundance/Master_clean_estep2.csv")
data.m <- melt(data,id.vars="Taxa")
names(data.m)[2]<-paste("Rank")
ggplot(data.m, aes(Taxa, value),order_by(Taxa)) + geom_bar(aes(fill = Rank), position = "dodge", stat="identity") + labs(y="Percent Genomic Composition")+theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(data.m, aes(Taxa, value),order_by(Taxa)) + geom_bar(aes(fill = Rank), position = "dodge", stat="identity") + labs(y="Percent Genomic Composition")+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ scale_x_discrete(labels=c("1 "=" O. sativa" , "2 "=" P. edulis" , "3 "=" A. nepalensis" , "4 "=" U. digitatum" , "5 "=" S. bicolor" , "6 "=" A. mutica" , "7 "=" H. hirta" , "8 "=" I. rugosum" , "9 "=" Z. mays" , "10 "=" Z. perennis" , "11 "=" T. andersonii" , "12 "=" T. dactyloides" , "13 "=" T. floridanum" , "14 "=" T. laxum" , "15 "=" T. peruvianus"))
library(ggplot2)
library(cowplot)
data.m <- melt(data,id.vars="Taxa")
names(data.m)[2]<-paste("Rank")
ggplot(data.m, aes(Taxa, value),order_by(Taxa)) + geom_bar(aes(fill = Rank), position = "dodge", stat="identity") + labs(y="Percent Genomic Composition")+theme(axis.text.x = element_text(angle = 90, hjust = 1))
tiff(filename = "~/Desktop/Fig2.tiff", width=600, height = 600, units="px")
ggplot(data.m, aes(Taxa, value),order_by(Taxa)) + geom_bar(aes(fill = Rank), position = "dodge", stat="identity") + labs(y="Percent Genomic Composition")+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ scale_x_discrete(labels=c("a"="O.sativa","b"="P.edulis","c"="A.nepalensis","d"="Z.mays","e"="Z.perennis","f"="T.andersonii","g"="T.dactyloides","h"="T.floridanum","i"="T.laxum","j"="T.peruvianus","k"="U.digitatum","l"="A.mutica","m"="I.rugosum","n"="H.hirta","o"="S.bicolor"))+guides(fill=FALSE)+theme(axis.title.x=element_blank())
dev.off()
tiff(filename = "~/Desktop/Fig2.tiff", width=600, height = 600, units="px",res = 500)
ggplot(data.m, aes(Taxa, value),order_by(Taxa)) + geom_bar(aes(fill = Rank), position = "dodge", stat="identity") + labs(y="Percent Genomic Composition")+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ scale_x_discrete(labels=c("a"="O.sativa","b"="P.edulis","c"="A.nepalensis","d"="Z.mays","e"="Z.perennis","f"="T.andersonii","g"="T.dactyloides","h"="T.floridanum","i"="T.laxum","j"="T.peruvianus","k"="U.digitatum","l"="A.mutica","m"="I.rugosum","n"="H.hirta","o"="S.bicolor"))+guides(fill=FALSE)+theme(axis.title.x=element_blank())
dev.off()
tiff(filename = "~/Desktop/Fig2.tiff", width=600, height = 600, units="px",res = 500)
ggplot(data.m, aes(Taxa, value),order_by(Taxa)) + geom_bar(aes(fill = Rank), position = "dodge", stat="identity") + labs(y="Percent Genomic Composition")+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ scale_x_discrete(labels=c("a"="O.sativa","b"="P.edulis","c"="A.nepalensis","d"="Z.mays","e"="Z.perennis","f"="T.andersonii","g"="T.dactyloides","h"="T.floridanum","i"="T.laxum","j"="T.peruvianus","k"="U.digitatum","l"="A.mutica","m"="I.rugosum","n"="H.hirta","o"="S.bicolor"))+guides(fill=FALSE)+theme(axis.title.x=element_blank())
dev.off()
tiff(filename = "~/Desktop/Fig2.tiff", width=600, height = 600, units="px")
ggplot(data.m, aes(Taxa, value),order_by(Taxa)) + geom_bar(aes(fill = Rank), position = "dodge", stat="identity") + labs(y="Percent Genomic Composition")+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ scale_x_discrete(labels=c("a"="O.sativa","b"="P.edulis","c"="A.nepalensis","d"="Z.mays","e"="Z.perennis","f"="T.andersonii","g"="T.dactyloides","h"="T.floridanum","i"="T.laxum","j"="T.peruvianus","k"="U.digitatum","l"="A.mutica","m"="I.rugosum","n"="H.hirta","o"="S.bicolor"))+guides(fill=FALSE)+theme(axis.title.x=element_blank())
dev.off()
tiff(filename = "~/Desktop/Fig2.tiff", width=600, height = 600)
ggplot(data.m, aes(Taxa, value),order_by(Taxa)) + geom_bar(aes(fill = Rank), position = "dodge", stat="identity") + labs(y="Percent Genomic Composition")+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ scale_x_discrete(labels=c("a"="O.sativa","b"="P.edulis","c"="A.nepalensis","d"="Z.mays","e"="Z.perennis","f"="T.andersonii","g"="T.dactyloides","h"="T.floridanum","i"="T.laxum","j"="T.peruvianus","k"="U.digitatum","l"="A.mutica","m"="I.rugosum","n"="H.hirta","o"="S.bicolor"))+guides(fill=FALSE)+theme(axis.title.x=element_blank())
dev.off()
setEPS()
postscript("~/Desktop/Fig2.tiff")
ggplot(data.m, aes(Taxa, value),order_by(Taxa)) + geom_bar(aes(fill = Rank), position = "dodge", stat="identity") + labs(y="Percent Genomic Composition")+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ scale_x_discrete(labels=c("a"="O.sativa","b"="P.edulis","c"="A.nepalensis","d"="Z.mays","e"="Z.perennis","f"="T.andersonii","g"="T.dactyloides","h"="T.floridanum","i"="T.laxum","j"="T.peruvianus","k"="U.digitatum","l"="A.mutica","m"="I.rugosum","n"="H.hirta","o"="S.bicolor"))+guides(fill=FALSE)+theme(axis.title.x=element_blank())
dev.off()
postscript("~/Desktop/Fig2.eps")
setEPS()
postscript("~/Desktop/Fig2.eps")
ggplot(data.m, aes(Taxa, value),order_by(Taxa)) + geom_bar(aes(fill = Rank), position = "dodge", stat="identity") + labs(y="Percent Genomic Composition")+theme(axis.text.x = element_text(angle = 90, hjust = 1))+ scale_x_discrete(labels=c("a"="O.sativa","b"="P.edulis","c"="A.nepalensis","d"="Z.mays","e"="Z.perennis","f"="T.andersonii","g"="T.dactyloides","h"="T.floridanum","i"="T.laxum","j"="T.peruvianus","k"="U.digitatum","l"="A.mutica","m"="I.rugosum","n"="H.hirta","o"="S.bicolor"))+guides(fill=FALSE)+theme(axis.title.x=element_blank())
dev.off()
?postscript
