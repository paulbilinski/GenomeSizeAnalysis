mins <- apply(crap, 2, min)
scaled.rna15 <- scale(crap, center = mins, scale = maxs - mins )
par(mfrow=c(1,2))
image(scaled.rna15,xlab="Accessions by GS",yaxt='n',xaxt='n',main="Scaled Genomic MB of RNA Elements", col=topo.colors(50))
gencomp <- round(100*colMeans(crap), digits = 2)
umm <- seq(0,1, length.out = 15)
umm2 <- 0:1
axis(2, at=umm, labels=gencomp,las=2)
axis(1,at=umm2,labels=c("Largest","Smallest"))
text(x = -.05, y = 1.15, labels = "A", xpd = NA,cex = 2)
listdna <- read.csv("ToptmpDNA2.txt", header=FALSE)
listlandr <- read.csv("Landrace_FTE_aggregated.csv",header=TRUE)
dna50 <- merge(listdna, listlandr, by.x="V1",by.y="FTE_group",sort=FALSE)
dna50$V1 <- NULL
tdna50 <- as.data.frame(t(dna50))
gensz <- read.csv("RimmaGS.txt",header=TRUE,row.names="line")
tmp <- merge(gensz, tdna50, by.x="row.names",by.y="row.names",sort=FALSE)
tmp2 <- tmp[order(tmp$size, decreasing=TRUE), ]
sizes <- tmp2$size
tmp2$size <- NULL
accid <- tmp2$Row.names
tmp2$Row.names <- NULL
row.names(tmp2) <- accid
crap <- tmp2 * sizes
maxs <- apply(crap, 2, max)
mins <- apply(crap, 2, min)
scaled.dna15 <- scale(crap, center = mins, scale = maxs - mins )
image(scaled.dna15,xlab="Accessions by GS",yaxt='n',xaxt='n',main="Scaled Genomic MB of DNA Elements", col=topo.colors(50))
gencomp <- round(100*colMeans(crap), digits = 2)
umm <- seq(0,1, length.out = 15)
umm2 <- 0:1
axis(2, at=umm, labels=gencomp,las=2)
axis(1,at=umm2,labels=c("Largest","Smallest"))
text(x = -.05, y = 1.15, labels = "B", xpd = NA,cex = 2)
View(dna50)
final77 <- c("RIMMA0388.1","RIMMA0389.1","RIMMA0390.1","RIMMA0392.1","RIMMA0393.1","RIMMA0394.2","RIMMA0395.2","RIMMA0396.1","RIMMA0397.1","RIMMA0398.1","RIMMA0399.1","RIMMA0403.2","RIMMA0404.1","RIMMA0406.1","RIMMA0409.1","RIMMA0416.1","RIMMA0417.1","RIMMA0418.1","RIMMA0421.1","RIMMA0422.1","RIMMA0423.1","RIMMA0424.1","RIMMA0425.1","RIMMA0426.1","RIMMA0428.1","RIMMA0430.1","RIMMA0431.1","RIMMA0433.1","RIMMA0436.1","RIMMA0437.1","RIMMA0438.1","RIMMA0441.1","RIMMA0462.1","RIMMA0464.1","RIMMA0465.1","RIMMA0466.1","RIMMA0467.1","RIMMA0468.1","RIMMA0473.1","RIMMA0614.1","RIMMA0615.1","RIMMA0616.1","RIMMA0619.1","RIMMA0620.1","RIMMA0621.1","RIMMA0623.1","RIMMA0625.1","RIMMA0628.1","RIMMA0630.1","RIMMA0657.1","RIMMA0658.1","RIMMA0661.1","RIMMA0662.1","RIMMA0663.1","RIMMA0667.1","RIMMA0671.1","RIMMA0674.1","RIMMA0680.1","RIMMA0690.1","RIMMA0691.1","RIMMA0696.1","RIMMA0700.1","RIMMA0701.1","RIMMA0702.1","RIMMA0703.1","RIMMA0708.1","RIMMA0709.1","RIMMA0710.1","RIMMA0712.1","RIMMA0716.1","RIMMA0720.1","RIMMA0721.1","RIMMA0727.1","RIMMA0729.1","RIMMA0730.1","RIMMA0731.1","RIMMA0733.1")
final77 <- c("RIMMA0388.1","RIMMA0389.1","RIMMA0390.1","RIMMA0392.1","RIMMA0393.1","RIMMA0394.2","RIMMA0395.2","RIMMA0396.1","RIMMA0397.1","RIMMA0398.1","RIMMA0399.1","RIMMA0403.2","RIMMA0404.1","RIMMA0406.1","RIMMA0409.1","RIMMA0416.1","RIMMA0417.1","RIMMA0418.1","RIMMA0421.1","RIMMA0422.1","RIMMA0423.1","RIMMA0424.1","RIMMA0425.1","RIMMA0426.1","RIMMA0428.1","RIMMA0430.1","RIMMA0431.1","RIMMA0433.1","RIMMA0436.1","RIMMA0437.1","RIMMA0438.1","RIMMA0441.1","RIMMA0462.1","RIMMA0464.1","RIMMA0465.1","RIMMA0466.1","RIMMA0467.1","RIMMA0468.1","RIMMA0473.1","RIMMA0614.1","RIMMA0615.1","RIMMA0616.1","RIMMA0619.1","RIMMA0620.1","RIMMA0621.1","RIMMA0623.1","RIMMA0625.1","RIMMA0628.1","RIMMA0630.1","RIMMA0657.1","RIMMA0658.1","RIMMA0661.1","RIMMA0662.1","RIMMA0663.1","RIMMA0667.1","RIMMA0671.1","RIMMA0674.1","RIMMA0680.1","RIMMA0690.1","RIMMA0691.1","RIMMA0696.1","RIMMA0700.1","RIMMA0701.1","RIMMA0702.1","RIMMA0703.1","RIMMA0708.1","RIMMA0709.1","RIMMA0710.1","RIMMA0712.1","RIMMA0716.1","RIMMA0720.1","RIMMA0721.1","RIMMA0727.1","RIMMA0729.1","RIMMA0730.1","RIMMA0731.1","RIMMA0733.1")
final77 <- as.data.frame(c("RIMMA0388.1","RIMMA0389.1","RIMMA0390.1","RIMMA0392.1","RIMMA0393.1","RIMMA0394.2","RIMMA0395.2","RIMMA0396.1","RIMMA0397.1","RIMMA0398.1","RIMMA0399.1","RIMMA0403.2","RIMMA0404.1","RIMMA0406.1","RIMMA0409.1","RIMMA0416.1","RIMMA0417.1","RIMMA0418.1","RIMMA0421.1","RIMMA0422.1","RIMMA0423.1","RIMMA0424.1","RIMMA0425.1","RIMMA0426.1","RIMMA0428.1","RIMMA0430.1","RIMMA0431.1","RIMMA0433.1","RIMMA0436.1","RIMMA0437.1","RIMMA0438.1","RIMMA0441.1","RIMMA0462.1","RIMMA0464.1","RIMMA0465.1","RIMMA0466.1","RIMMA0467.1","RIMMA0468.1","RIMMA0473.1","RIMMA0614.1","RIMMA0615.1","RIMMA0616.1","RIMMA0619.1","RIMMA0620.1","RIMMA0621.1","RIMMA0623.1","RIMMA0625.1","RIMMA0628.1","RIMMA0630.1","RIMMA0657.1","RIMMA0658.1","RIMMA0661.1","RIMMA0662.1","RIMMA0663.1","RIMMA0667.1","RIMMA0671.1","RIMMA0674.1","RIMMA0680.1","RIMMA0690.1","RIMMA0691.1","RIMMA0696.1","RIMMA0700.1","RIMMA0701.1","RIMMA0702.1","RIMMA0703.1","RIMMA0708.1","RIMMA0709.1","RIMMA0710.1","RIMMA0712.1","RIMMA0716.1","RIMMA0720.1","RIMMA0721.1","RIMMA0727.1","RIMMA0729.1","RIMMA0730.1","RIMMA0731.1","RIMMA0733.1"))
listrna <- read.csv("ToptmpRetros2.txt", header=FALSE)
listlandr <- read.csv("Landrace_FTE_aggregated.csv",header=TRUE)
rna50 <- merge(listrna, listlandr, by.x="V1",by.y="FTE_group",sort=FALSE)
View(rna50)
rna50$V1 <- NULL
trna50 <- as.data.frame(t(rna50))
View(trna50)
gensz <- read.csv("RimmaGS.txt",header=TRUE,row.names="line")
View(gensz)
final77 <- c("RIMMA0388.1","RIMMA0389.1","RIMMA0390.1","RIMMA0392.1","RIMMA0393.1","RIMMA0394.2","RIMMA0395.2","RIMMA0396.1","RIMMA0397.1","RIMMA0398.1","RIMMA0399.1","RIMMA0403.2","RIMMA0404.1","RIMMA0406.1","RIMMA0409.1","RIMMA0416.1","RIMMA0417.1","RIMMA0418.1","RIMMA0421.1","RIMMA0422.1","RIMMA0423.1","RIMMA0424.1","RIMMA0425.1","RIMMA0426.1","RIMMA0428.1","RIMMA0430.1","RIMMA0431.1","RIMMA0433.1","RIMMA0436.1","RIMMA0437.1","RIMMA0438.1","RIMMA0441.1","RIMMA0462.1","RIMMA0464.1","RIMMA0465.1","RIMMA0466.1","RIMMA0467.1","RIMMA0468.1","RIMMA0473.1","RIMMA0614.1","RIMMA0615.1","RIMMA0616.1","RIMMA0619.1","RIMMA0620.1","RIMMA0621.1","RIMMA0623.1","RIMMA0625.1","RIMMA0628.1","RIMMA0630.1","RIMMA0657.1","RIMMA0658.1","RIMMA0661.1","RIMMA0662.1","RIMMA0663.1","RIMMA0667.1","RIMMA0671.1","RIMMA0674.1","RIMMA0680.1","RIMMA0690.1","RIMMA0691.1","RIMMA0696.1","RIMMA0700.1","RIMMA0701.1","RIMMA0702.1","RIMMA0703.1","RIMMA0708.1","RIMMA0709.1","RIMMA0710.1","RIMMA0712.1","RIMMA0716.1","RIMMA0720.1","RIMMA0721.1","RIMMA0727.1","RIMMA0729.1","RIMMA0730.1","RIMMA0731.1","RIMMA0733.1")
gensz2 <- merge(gensz, final77, by.x="row.names")
final2<-as.data.frame(final77)
View(final2)
gensz2 <- merge(gensz, final2, by.x="row.names",by.y="final77",sort=FALSE)
View(gensz2)
tmp <- merge(gensz, trna50, by.x="row.names",by.y="row.names",sort=FALSE)
tmp <- merge(gensz2, trna50, by.x="row.names",by.y="row.names",sort=FALSE)
gensz <- read.csv("RimmaGS.txt",header=TRUE,row.names="line")
View(gensz)
View(gensz2)
tmp <- merge(gensz2, trna50, by.x="Row.names",by.y="row.names",sort=FALSE)
tmp2 <- tmp[order(tmp$size, decreasing=TRUE), ]
sizes <- tmp2$size
tmp2$size <- NULL
accid <- tmp2$Row.names
tmp2$Row.names <- NULL
row.names(tmp2) <- accid
crap <- tmp2 * sizes
maxs <- apply(crap, 2, max)
mins <- apply(crap, 2, min)
scaled.rna15 <- scale(crap, center = mins, scale = maxs - mins )
par(mfrow=c(1,2))
image(scaled.rna15,xlab="Accessions by GS",yaxt='n',xaxt='n',main="Scaled Genomic MB of RNA Elements", col=topo.colors(50))
gencomp <- round(100*colMeans(crap), digits = 2)
umm <- seq(0,1, length.out = 15)
umm2 <- 0:1
axis(2, at=umm, labels=gencomp,las=2)
axis(1,at=umm2,labels=c("Largest","Smallest"))
text(x = -.05, y = 1.15, labels = "A", xpd = NA,cex = 2)
listdna <- read.csv("ToptmpDNA2.txt", header=FALSE)
listlandr <- read.csv("Landrace_FTE_aggregated.csv",header=TRUE)
dna50 <- merge(listdna, listlandr, by.x="V1",by.y="FTE_group",sort=FALSE)
dna50$V1 <- NULL
tdna50 <- as.data.frame(t(dna50))
gensz <- read.csv("RimmaGS.txt",header=TRUE,row.names="line")
gensz2 <- merge(gensz, final2, by.x="row.names",by.y="final77",sort=FALSE)
tmp <- merge(gensz2, tdna50, by.x="Row.names",by.y="row.names",sort=FALSE)
tmp2 <- tmp[order(tmp$size, decreasing=TRUE), ]
sizes <- tmp2$size
tmp2$size <- NULL
accid <- tmp2$Row.names
tmp2$Row.names <- NULL
row.names(tmp2) <- accid
crap <- tmp2 * sizes
maxs <- apply(crap, 2, max)
mins <- apply(crap, 2, min)
scaled.dna15 <- scale(crap, center = mins, scale = maxs - mins )
image(scaled.dna15,xlab="Accessions by GS",yaxt='n',xaxt='n',main="Scaled Genomic MB of DNA Elements", col=topo.colors(50))
gencomp <- round(100*colMeans(crap), digits = 2)
umm <- seq(0,1, length.out = 15)
umm2 <- 0:1
axis(2, at=umm, labels=gencomp,las=2)
axis(1,at=umm2,labels=c("Largest","Smallest"))
text(x = -.05, y = 1.15, labels = "B", xpd = NA,cex = 2)
png("~/Desktop/supp_tevar_77.png")
listrna <- read.csv("ToptmpRetros2.txt", header=FALSE)
listlandr <- read.csv("Landrace_FTE_aggregated.csv",header=TRUE)
rna50 <- merge(listrna, listlandr, by.x="V1",by.y="FTE_group",sort=FALSE)
rna50$V1 <- NULL
trna50 <- as.data.frame(t(rna50))
gensz <- read.csv("RimmaGS.txt",header=TRUE,row.names="line")
gensz2 <- merge(gensz, final2, by.x="row.names",by.y="final77",sort=FALSE)
tmp <- merge(gensz2, trna50, by.x="Row.names",by.y="row.names",sort=FALSE)
tmp2 <- tmp[order(tmp$size, decreasing=TRUE), ]
sizes <- tmp2$size
tmp2$size <- NULL
accid <- tmp2$Row.names
tmp2$Row.names <- NULL
row.names(tmp2) <- accid
crap <- tmp2 * sizes
maxs <- apply(crap, 2, max)
mins <- apply(crap, 2, min)
scaled.rna15 <- scale(crap, center = mins, scale = maxs - mins )
par(mfrow=c(1,2))
image(scaled.rna15,xlab="Accessions by GS",yaxt='n',xaxt='n',main="Scaled Genomic MB of RNA Elements", col=topo.colors(50))
gencomp <- round(100*colMeans(crap), digits = 2)
umm <- seq(0,1, length.out = 15)
umm2 <- 0:1
axis(2, at=umm, labels=gencomp,las=2)
axis(1,at=umm2,labels=c("Largest","Smallest"))
text(x = -.05, y = 1.15, labels = "A", xpd = NA,cex = 2)
listdna <- read.csv("ToptmpDNA2.txt", header=FALSE)
listlandr <- read.csv("Landrace_FTE_aggregated.csv",header=TRUE)
dna50 <- merge(listdna, listlandr, by.x="V1",by.y="FTE_group",sort=FALSE)
dna50$V1 <- NULL
tdna50 <- as.data.frame(t(dna50))
gensz <- read.csv("RimmaGS.txt",header=TRUE,row.names="line")
gensz2 <- merge(gensz, final2, by.x="row.names",by.y="final77",sort=FALSE)
tmp <- merge(gensz2, tdna50, by.x="Row.names",by.y="row.names",sort=FALSE)
tmp2 <- tmp[order(tmp$size, decreasing=TRUE), ]
sizes <- tmp2$size
tmp2$size <- NULL
accid <- tmp2$Row.names
tmp2$Row.names <- NULL
row.names(tmp2) <- accid
crap <- tmp2 * sizes
maxs <- apply(crap, 2, max)
mins <- apply(crap, 2, min)
scaled.dna15 <- scale(crap, center = mins, scale = maxs - mins )
image(scaled.dna15,xlab="Accessions by GS",yaxt='n',xaxt='n',main="Scaled Genomic MB of DNA Elements", col=topo.colors(50))
gencomp <- round(100*colMeans(crap), digits = 2)
umm <- seq(0,1, length.out = 15)
umm2 <- 0:1
axis(2, at=umm, labels=gencomp,las=2)
axis(1,at=umm2,labels=c("Largest","Smallest"))
text(x = -.05, y = 1.15, labels = "B", xpd = NA,cex = 2)
dev.off()
png("~/Desktop/supp_tevar_77.png",width=800,height=500)
#RNA elements
listrna <- read.csv("ToptmpRetros2.txt", header=FALSE)
listlandr <- read.csv("Landrace_FTE_aggregated.csv",header=TRUE)
rna50 <- merge(listrna, listlandr, by.x="V1",by.y="FTE_group",sort=FALSE)
rna50$V1 <- NULL
trna50 <- as.data.frame(t(rna50))
gensz <- read.csv("RimmaGS.txt",header=TRUE,row.names="line")
gensz2 <- merge(gensz, final2, by.x="row.names",by.y="final77",sort=FALSE)
tmp <- merge(gensz2, trna50, by.x="Row.names",by.y="row.names",sort=FALSE)
tmp2 <- tmp[order(tmp$size, decreasing=TRUE), ]
sizes <- tmp2$size
tmp2$size <- NULL
accid <- tmp2$Row.names
tmp2$Row.names <- NULL
row.names(tmp2) <- accid
crap <- tmp2 * sizes
maxs <- apply(crap, 2, max)
mins <- apply(crap, 2, min)
scaled.rna15 <- scale(crap, center = mins, scale = maxs - mins )
par(mfrow=c(1,2))
image(scaled.rna15,xlab="Accessions by GS",yaxt='n',xaxt='n',main="Scaled Genomic MB of RNA Elements", col=topo.colors(50))
gencomp <- round(100*colMeans(crap), digits = 2)
umm <- seq(0,1, length.out = 15)
umm2 <- 0:1
axis(2, at=umm, labels=gencomp,las=2)
axis(1,at=umm2,labels=c("Largest","Smallest"))
text(x = -.05, y = 1.15, labels = "A", xpd = NA,cex = 2)
#DNA elements
listdna <- read.csv("ToptmpDNA2.txt", header=FALSE)
listlandr <- read.csv("Landrace_FTE_aggregated.csv",header=TRUE)
dna50 <- merge(listdna, listlandr, by.x="V1",by.y="FTE_group",sort=FALSE)
dna50$V1 <- NULL
tdna50 <- as.data.frame(t(dna50))
gensz <- read.csv("RimmaGS.txt",header=TRUE,row.names="line")
gensz2 <- merge(gensz, final2, by.x="row.names",by.y="final77",sort=FALSE)
tmp <- merge(gensz2, tdna50, by.x="Row.names",by.y="row.names",sort=FALSE)
tmp2 <- tmp[order(tmp$size, decreasing=TRUE), ]
sizes <- tmp2$size
tmp2$size <- NULL
accid <- tmp2$Row.names
tmp2$Row.names <- NULL
row.names(tmp2) <- accid
crap <- tmp2 * sizes
maxs <- apply(crap, 2, max)
mins <- apply(crap, 2, min)
scaled.dna15 <- scale(crap, center = mins, scale = maxs - mins )
image(scaled.dna15,xlab="Accessions by GS",yaxt='n',xaxt='n',main="Scaled Genomic MB of DNA Elements", col=topo.colors(50))
gencomp <- round(100*colMeans(crap), digits = 2)
umm <- seq(0,1, length.out = 15)
umm2 <- 0:1
axis(2, at=umm, labels=gencomp,las=2)
axis(1,at=umm2,labels=c("Largest","Smallest"))
text(x = -.05, y = 1.15, labels = "B", xpd = NA,cex = 2)
dev.off()
png("~/Desktop/supp_tevar_77.png",width=900,height=500)
#RNA elements
listrna <- read.csv("ToptmpRetros2.txt", header=FALSE)
listlandr <- read.csv("Landrace_FTE_aggregated.csv",header=TRUE)
rna50 <- merge(listrna, listlandr, by.x="V1",by.y="FTE_group",sort=FALSE)
rna50$V1 <- NULL
trna50 <- as.data.frame(t(rna50))
gensz <- read.csv("RimmaGS.txt",header=TRUE,row.names="line")
gensz2 <- merge(gensz, final2, by.x="row.names",by.y="final77",sort=FALSE)
tmp <- merge(gensz2, trna50, by.x="Row.names",by.y="row.names",sort=FALSE)
tmp2 <- tmp[order(tmp$size, decreasing=TRUE), ]
sizes <- tmp2$size
tmp2$size <- NULL
accid <- tmp2$Row.names
tmp2$Row.names <- NULL
row.names(tmp2) <- accid
crap <- tmp2 * sizes
maxs <- apply(crap, 2, max)
mins <- apply(crap, 2, min)
scaled.rna15 <- scale(crap, center = mins, scale = maxs - mins )
par(mfrow=c(1,2))
image(scaled.rna15,xlab="Accessions by GS",yaxt='n',xaxt='n',main="Scaled Genomic MB of RNA Elements", col=topo.colors(50))
gencomp <- round(100*colMeans(crap), digits = 2)
umm <- seq(0,1, length.out = 15)
umm2 <- 0:1
axis(2, at=umm, labels=gencomp,las=2)
axis(1,at=umm2,labels=c("Largest","Smallest"))
text(x = -.05, y = 1.15, labels = "A", xpd = NA,cex = 2)
#DNA elements
listdna <- read.csv("ToptmpDNA2.txt", header=FALSE)
listlandr <- read.csv("Landrace_FTE_aggregated.csv",header=TRUE)
dna50 <- merge(listdna, listlandr, by.x="V1",by.y="FTE_group",sort=FALSE)
dna50$V1 <- NULL
tdna50 <- as.data.frame(t(dna50))
gensz <- read.csv("RimmaGS.txt",header=TRUE,row.names="line")
gensz2 <- merge(gensz, final2, by.x="row.names",by.y="final77",sort=FALSE)
tmp <- merge(gensz2, tdna50, by.x="Row.names",by.y="row.names",sort=FALSE)
tmp2 <- tmp[order(tmp$size, decreasing=TRUE), ]
sizes <- tmp2$size
tmp2$size <- NULL
accid <- tmp2$Row.names
tmp2$Row.names <- NULL
row.names(tmp2) <- accid
crap <- tmp2 * sizes
maxs <- apply(crap, 2, max)
mins <- apply(crap, 2, min)
scaled.dna15 <- scale(crap, center = mins, scale = maxs - mins )
image(scaled.dna15,xlab="Accessions by GS",yaxt='n',xaxt='n',main="Scaled Genomic MB of DNA Elements", col=topo.colors(50))
gencomp <- round(100*colMeans(crap), digits = 2)
umm <- seq(0,1, length.out = 15)
umm2 <- 0:1
axis(2, at=umm, labels=gencomp,las=2)
axis(1,at=umm2,labels=c("Largest","Smallest"))
text(x = -.05, y = 1.15, labels = "B", xpd = NA,cex = 2)
dev.off()
?binom.test
binom.test(x=9,n=43,p=0.02)
binom.test(x=9,n=43,p=0.05)
binom.test(x=9,n=43,p=0.1)
binom.test(x=9,n=43,p=0.12)
binom.test(x=9,n=43,p=0.11)
binom.test(x=1,n=13,p=0.02)
data <- read.csv("~/Documents/Projects/Genome_Size_Analysis/GenomeSizeZea_Analyses/FISH_correlations/fishcorcirclesize.csv")
data <- read.csv("~/Documents/Projects/Genome_Size_Analysis/GenomeSizeZea_Analyses/FISH_correlations/Birchler_FISHcor.csv")
data <- data[1:20,]
library(ggplot2)
library(cowplot)
fishy<-ggplot(data, aes(knob180, X180knobmb)) + geom_point() + ylab("Measured Knob Content (mb)") + xlab("Observed Knob Count")+ geom_smooth(method="lm", se = TRUE, lty=2)+theme(axis.text=element_text(size=20),axis.title=element_text(size=20,face="bold"))
fishy
fishy2<-ggplot(data, aes(tr1, tr1mb)) + geom_point() + ylab("Measured TR1 Knob Content (mb)") + xlab("Observed TR1 Knob Count")+ geom_smooth(method="lm", se = TRUE, lty=2)+theme(axis.text=element_text(size=20),axis.title=element_text(size=20,face="bold"))
library(gridExtra)
grid.arrange(fishy,fishy2,ncol=2)
plot_grid(fishy,fishy2,ncol=2, labels=c("A","B"))
fishy<-ggplot(data, aes(knob180, X180knobmb)) + geom_point() + ylab("Measured Knob Content (MB)") + xlab("Observed Knob Count")+ geom_smooth(method="lm", se = TRUE, lty=2)+theme(axis.text=element_text(size=20),axis.title=element_text(size=20,face="bold"))
fishy2<-ggplot(data, aes(tr1, tr1mb)) + geom_point() + ylab("Measured TR1 Knob Content (MB)") + xlab("Observed TR1 Knob Count")+ geom_smooth(method="lm", se = TRUE, lty=2)+theme(axis.text=element_text(size=20),axis.title=element_text(size=20,face="bold"))
grid.arrange(fishy,fishy2,ncol=2)
plot_grid(fishy,fishy2,ncol=2, labels=c("A","B"))
png(filename = "~/Desktop/Knobcorr.png")
plot_grid(fishy,fishy2,ncol=2, labels=c("B","C"))
dev.off()
dev.off()
plot_grid(fishy,fishy2,ncol=2, labels=c("B","C"))
png(filename = "~/Desktop/Knobcorr.png")
plot_grid(fishy,fishy2,ncol=2, labels=c("B","C"))
dev.off()
dev.off()
plot_grid(fishy,fishy2,ncol=2, labels=c("B","C"))
png(filename = "~/Knobcorr.png")
plot_grid(fishy,fishy2,ncol=2, labels=c("B","C"))
dev.off()
plot_grid(fishy,fishy2,ncol=2, labels=c("B","C"))
dev.off()
dev.off()
dev.off()
plot_grid(fishy,fishy2,ncol=2, labels=c("B","C"))
fishy2<-ggplot(data, aes(tr1, tr1mb)) + geom_point() + ylab("Measured TR1  Content (MB)") + xlab("Observed TR1  Count")+ geom_smooth(method="lm", se = TRUE, lty=2)+theme(axis.text=element_text(size=20),axis.title=element_text(size=20,face="bold"))
plot_grid(fishy,fishy2,ncol=2, labels=c("B","C"))
plot_grid(fishy,fishy2,ncol=2, labels=c("A","B"))
library(ggplot2)
library(cowplot)
library(gridExtra)
data<-read.table("~/Documents/Projects/Genome_Size_Analysis/GenomeSizeZea_Analyses/SelectionTests/PaulCellSize_ZeaGBSv27raw_Poly_minSiteCov0.6_minTaxaCov.1.RndImp.Endelman.kinship",skip=3,row.names = 1)
mzfull <-as.matrix(data[1:77,1:77])
A <- as.matrix(mzfull)
iden <- as.data.frame(substr(row.names(mzfull),1,9))
colnames(iden)[1] <- "identifier"
pheno<- read.csv("~/Documents/Projects/Genome_Size_Analysis/GenomeSizeZea_Analyses/SelectionTests/Maize/Landrace_data.csv")
pheno$X <- NULL
pheno2 <- subset(pheno, pheno$Region!="SWUS")
pheno2$iden <- substr(pheno2$Row.names,1,9)
maizephen <- merge(iden, pheno2, by.x="identifier", by.y="iden",sort=FALSE)
maizephen <- maizephen[,c(1,1198:1231)]
maizephen$GS_bp <- maizephen$GS_bp/1000000
maizephen$X180knobbp <- maizephen$X180knobbp/1000000
maizephen$TR1bp <- maizephen$TR1bp/1000000
maizephen$TotallTebp <- maizephen$TotallTebp/1000000
maizephen$Region<-substr(maizephen$Region,1,1)
maizephen$Region <- gsub("M", "MA", maizephen$Region)
maizephen$Region <- gsub("S", "SA", maizephen$Region)
cor(pheno2$TotallTe.,pheno2$GS_bp)
cor(pheno2$TR1.,pheno2$GS_bp)
cor(pheno2$X180knob.,pheno2$GS_bp)
cor(pheno2$X180knob.,pheno2$GS_bp)
cor(pheno2$TotallTe.,pheno2$GS_bp)
cor(pheno2$TR1.,pheno2$GS_bp)
cor(pheno2$X180knob.,pheno2$GS_bp)
cor(pheno2$TotallTebp,pheno2$GS_bp)
cor(pheno2$TR1bp,pheno2$GS_bp)
cor(pheno2$X180knobbp,pheno2$GS_bp)
setwd("~/Documents/Projects/Genome_Size_Analysis/GenomeSizeZea_Analyses/SelectionTests/Maize/")
options(scipen = 999)
library(data.table)
library(rrBLUP)
library(emma)
library(OpenMx)
source("../jri_emma_returnbeta.txt")
data<-read.table("~/Documents/Projects/Genome_Size_Analysis/GenomeSizeZea_Analyses/SelectionTests/PaulCellSize_ZeaGBSv27raw_Poly_minSiteCov0.6_minTaxaCov.1.RndImp.Endelman.kinship",skip=3,row.names = 1)
mzfull <-as.matrix(data[1:77,1:77])
A <- as.matrix(mzfull)
iden <- as.data.frame(substr(row.names(mzfull),1,9))
colnames(iden)[1] <- "identifier"
pheno<- read.csv("Landrace_data.csv")
pheno$X <- NULL
pheno2 <- subset(pheno, pheno$Region!="SWUS")
pheno2$iden <- substr(pheno2$Row.names,1,9)
phenoorder <- merge(iden, pheno2, by.x="identifier", by.y="iden",sort=FALSE)
mzM <-as.matrix(data[c(15:23,28,32,40:49,56:58,61:65,67:77),c(15:23,28,32,40:49,56:58,61:65,67:77)])
A <- as.matrix(mzM)
iden <- as.data.frame(substr(row.names(mzM),1,9))
colnames(iden)[1] <- "identifier"
phenoorder <- merge(iden, pheno2, by.x="identifier", by.y="iden",sort=FALSE)
phenoorder$Region
gs <- t ( as.matrix ( phenoorder$GS_bp, ncol = 1 ) )
gsgb <- gs/1000000000
alt <- t ( as.matrix ( phenoorder$Altitude , ncol = 1 ) )
alt <- alt - mean ( alt ) + 0.5
out.gsgb <- emma.REML.t_beta ( gsgb , alt , K = A )
out.gsgb
knob <- t ( as.matrix ( phenoorder$X180knobbp, ncol = 1 ) )
knobgb <- knob/1000000000
out.knobgb <- emma.REML.t_beta ( knobgb , alt , K = A )
out.knobgb
tr1 <- t ( as.matrix ( phenoorder$TR1bp, ncol = 1 ) )
tr1gb <- tr1/1000000000
out.tr1gb <- emma.REML.t_beta ( tr1gb , alt , K = A )
out.tr1gb
centc <- t ( as.matrix ( phenoorder$CentCbp, ncol = 1 ) )
centcgb <- centc/1000000000
out.centcgb <- emma.REML.t_beta ( centcgb , alt , K = A )
out.centcgb
tes <- t ( as.matrix ( phenoorder$TotallTebp, ncol = 1 ) )
tesgb <- tes/1000000000
out.tesgb <- emma.REML.t_beta ( tesgb , alt , K = A )
out.tesgb
minustr1 <- t ( as.matrix ( phenoorder$GS_bp - phenoorder$TR1bp , ncol = 1 ) )
minustr1bp <- minustr1/1000000000
out.minustr1bp <- emma.REML.t_beta ( minustr1bp , alt , K = A )
out.minustr1bp
minusallknob <- t ( as.matrix ( phenoorder$GS_bp - phenoorder$TR1bp -phenoorder$X180knobbp , ncol = 1 ) )
minusallknob <- minusallknob/1000000000
out.minusallknob <- emma.REML.t_beta ( minusallknob , alt , K = A )
out.minusallknob
mzSA <-as.matrix(data[c(1:14,24:27,29:31,33:39,50:55,59:60,66),c(1:14,24:27,29:31,33:39,50:55,59:60,66)])
A <- as.matrix(mzSA)
iden <- as.data.frame(substr(row.names(mzSA),1,9))
colnames(iden)[1] <- "identifier"
phenoorder <- merge(iden, pheno2, by.x="identifier", by.y="iden",sort=FALSE)
phenoorder$Region
gs <- t ( as.matrix ( phenoorder$GS_bp, ncol = 1 ) )
gsgb <- gs/1000000000
alt <- t ( as.matrix ( phenoorder$Altitude , ncol = 1 ) )
alt <- alt - mean ( alt ) + 0.5
out.gsgb <- emma.REML.t_beta ( gsgb , alt , K = A )
out.gsgb
knob <- t ( as.matrix ( phenoorder$X180knobbp, ncol = 1 ) )
knobgb <- knob/1000000000
out.knobgb <- emma.REML.t_beta ( knobgb , alt , K = A )
out.knobgb
tr1 <- t ( as.matrix ( phenoorder$TR1bp, ncol = 1 ) )
tr1gb <- tr1/1000000000
out.tr1gb <- emma.REML.t_beta ( tr1gb , alt , K = A )
out.tr1gb
centc <- t ( as.matrix ( phenoorder$CentCbp, ncol = 1 ) )
centcgb <- centc/1000000000
out.centcgb <- emma.REML.t_beta ( centcgb , alt , K = A )
out.centcgb
tes <- t ( as.matrix ( phenoorder$TotallTebp, ncol = 1 ) )
tesgb <- tes/1000000000
out.tesgb <- emma.REML.t_beta ( tesgb , alt , K = A )
out.tesgb
minustr1 <- t ( as.matrix ( phenoorder$GS_bp - phenoorder$TR1bp , ncol = 1 ) )
minustr1bp <- minustr1/1000000000
out.minustr1bp <- emma.REML.t_beta ( minustr1bp , alt , K = A )
out.minustr1bp
minusallknob <- t ( as.matrix ( phenoorder$GS_bp - phenoorder$TR1bp -phenoorder$X180knobbp , ncol = 1 ) )
minusallknob <- minusallknob/1000000000
out.minusallknob <- emma.REML.t_beta ( minusallknob , alt , K = A )
out.minusallknob
setwd("~/Documents/Projects/Genome_Size_Analysis/GenomeSizeZea_Analyses/SelectionTests/Mexicana/")
library(data.table)
library(rrBLUP)
library(emma)
library(OpenMx)
source("../jri_emma_returnbeta.txt")
data<-read.table("~/Documents/Projects/Genome_Size_Analysis/GenomeSizeZea_Analyses/SelectionTests/PaulCellSize_ZeaGBSv27raw_Poly_minSiteCov0.6_minTaxaCov.1.RndImp.Endelman.kinship",skip=3,row.names = 1)
mexfull <-data[78:170,78:170]
row.names(mexfull)
mexhigh <- mexfull[c(6:41,51:84),c(6:41,51:84)]
A <- as.matrix(mexhigh)
popam<- mexfull[c(1:5),c(1:5)]
pheno <- read.csv("Pheno_alt_threshold_ordered.csv")
gs <- t ( as.matrix (pheno$GS_bp, ncol=1) )
gsgb <- gs/2000000000
alt <- t ( as.matrix (pheno$Altitude, ncol=1))
alt <- alt - mean(alt) + 0.5
knob180 <- t ( as.matrix (pheno$X180knobbp, ncol=1))
knob180gb <- knob180/2000000000
TR1 <- t ( as.matrix (pheno$TR1bp, ncol=1))
TR1gb <- TR1/2000000000
Te <- t ( as.matrix (pheno$TotalTebp, ncol=1))
Tegb <- Te/2000000000
minustr1 <- t ( as.matrix ( pheno$GS_bp - pheno$TR1bp , ncol = 1 ) )
minustr1bp <- minustr1/2000000000
minusallknob <- t ( as.matrix ( pheno$GS_bp - pheno$TR1bp -pheno$X180knobbp , ncol = 1 ) )
minusallknob <- minusallknob/2000000000
out.gsgb <- emma.REML.t_beta( gsgb,alt,K=A)
out.gsgb
out.knob <- emma.REML.t_beta(knob180gb,alt,K=A)
out.knob
out.tr1 <- emma.REML.t_beta(TR1gb,alt,K=A)
out.tr1
out.te <- emma.REML.t_beta(Tegb,alt,K=A)
out.te
out.minustr1bp <- emma.REML.t_beta ( minustr1bp , alt , K = A )
out.minustr1bp
out.minusallknob <- emma.REML.t_beta ( minusallknob , alt , K = A )
out.minusallknob
setwd("~/Documents/Projects/Genome_Size_Analysis/GenomeSizeZea_Analyses/SelectionTests/Mexicana/")
library(data.table)
library(rrBLUP)
library(emma)
library(OpenMx)
source("../jri_emma_returnbeta.txt")
data<-read.table("~/Documents/Projects/Genome_Size_Analysis/GenomeSizeZea_Analyses/SelectionTests/PaulCellSize_ZeaGBSv27raw_Poly_minSiteCov0.6_minTaxaCov.1.RndImp.Endelman.kinship",skip=3,row.names = 1)
mexfull <-data[78:170,78:170]
row.names(mexfull)
mexhigh <- mexfull[c(6:41,51:84),c(6:41,51:84)]
A <- as.matrix(mexhigh)
popam<- mexfull[c(1:5),c(1:5)]
popm<- mexfull[c(41:49),c(41:49)]
poptz<- mexfull[c(85:93),c(85:93)]
poplows<-mexfull[c(1:5,41:49,85:93),c(1:5,41:49,85:93)]
sum(diag2vec(popam))/length(popam)
sum(diag2vec(popm))/length(popm)
sum(diag2vec(poptz))/length(poptz)
sum(diag2vec(poplows))/length(poplows)
sum(diag2vec(mexfull))/length(mexfull)
t.test(diag2vec(popam),diag2vec(mexfull))
t.test(diag2vec(popm),diag2vec(mexfull))
t.test(diag2vec(poptz),diag2vec(mexfull))
t.test(diag2vec(poplows),diag2vec(mexfull))
pheno <- read.csv("Pheno_alt_threshold_ordered.csv")
gs <- t ( as.matrix (pheno$GS_bp, ncol=1) )
gsgb <- gs/2000000000
alt <- t ( as.matrix (pheno$Altitude, ncol=1))
alt <- alt - mean(alt) + 0.5
knob180 <- t ( as.matrix (pheno$X180knobbp, ncol=1))
knob180gb <- knob180/2000000000
TR1 <- t ( as.matrix (pheno$TR1bp, ncol=1))
TR1gb <- TR1/2000000000
Te <- t ( as.matrix (pheno$TotalTebp, ncol=1))
Tegb <- Te/2000000000
minustr1 <- t ( as.matrix ( pheno$GS_bp - pheno$TR1bp , ncol = 1 ) )
minustr1bp <- minustr1/2000000000
minusallknob <- t ( as.matrix ( pheno$GS_bp - pheno$TR1bp -pheno$X180knobbp , ncol = 1 ) )
minusallknob <- minusallknob/2000000000
knitr::opts_chunk$set(echo = TRUE)
x <- 1:10
y <- 2:20
plot(x,y)
y <- 2:11
plot(x,y)
